<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width"/>
        <title>@ViewData["title"]</title>
        <link href="~/monaco-editor/min/vs/editor/editor.main.css" rel="stylesheet"/>
    </head>
    <body>
        <h2>Monaco Editor</h2>

        <div style="padding: 5pt">
            <button id="undoButton" name="undo" onclick="" disabled>Undo</button>
            <button id="redoButton" name="redo" onclick="" disabled>Redo</button>
        </div>
        <div id="editor" style="width: 800px; height: 600px; border: 1px solid grey"></div>

        <script src="~/monaco-editor/min/vs/loader.js"></script>
        @* <script src="~/scripts/editor.js"></script> *@
        <script>
            require.config({ paths: { 'vs': 'monaco-editor/min/vs' } });
            require(['vs/editor/editor.main'], setup);

            function setup() {

                const Editor = monaco.editor.create(
                    document.getElementById('editor'),
                    {
                        value: '# Welcome to the Markdown editor demo!',
                        language: 'markdown',
                        minimap: { enabled: false }
                    });

                document.getElementById('undoButton').onclick = Undo;
                document.getElementById('redoButton').onclick = Redo;

                Editor.focus();

                const InitialVersion = Editor.getModel().getAlternativeVersionId();

                let CurrentVersion = InitialVersion;

                let LastVersion = InitialVersion;

                Editor.onDidChangeModelContent(e => {
                    const VersionId = Editor.getModel().getAlternativeVersionId();

                    // undoing
                    if (VersionId < CurrentVersion) {
                        EnableRedoButton();
                        // no more undo possible
                        if (VersionId === InitialVersion) {
                            DisableUndoButton();
                        }
                    } else {
                        // redoing
                        if (VersionId <= LastVersion) {
                            // redoing the last change
                            if (VersionId === LastVersion) {
                                DisableRedoButton();
                            }
                        } else { // adding new change, disable redo when adding new changes
                            DisableRedoButton();
                            if (CurrentVersion > LastVersion) {
                                LastVersion = CurrentVersion;
                            }
                        }
                        EnableUndoButton();
                    }
                    CurrentVersion = VersionId;
                });

                function Undo() {
                    Editor.trigger('undo', 'undo', null);
                    Editor.focus();
                }

                function Redo() {
                    Editor.trigger('redo', 'redo', null);
                    Editor.focus();
                }

                function EnableUndoButton() {
                    document.getElementById("undoButton").disabled = false;
                }

                function DisableUndoButton() {
                    document.getElementById("undoButton").disabled = true;
                }

                function EnableRedoButton() {
                    document.getElementById("redoButton").disabled = false;
                }

                function DisableRedoButton() {
                    document.getElementById("redoButton").disabled = true;
                }
            }
        </script>
    </body>
</html>