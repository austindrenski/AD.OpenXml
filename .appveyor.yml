image: Visual Studio 2017

version: 1.4.{build}

branches:
  only:
    - master

environment:
  push: https://www.nuget.org/api/v2/package
  nuget:
    secure: lAOgXBlidUDKDMFlDJInIUO7K9vZc4FHLP715QyBp1gP9KFNQjntN70Jo6gi4+bA

dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'

build_script:
  - pwsh: dotnet build -c Release -f netcoreapp2.0
  - pwsh: dotnet publish src/CompilerAPI -c Release -f netcoreapp2.0 -r win81-x64
  - pwsh: dotnet publish src/CompilerAPI -c Release -f netcoreapp2.0 -r win10-x64
  - pwsh: dotnet publish src/CompilerAPI -c Release -f netcoreapp2.0 -r rhel-x64

after_build:
  - pwsh: Compress-Archive src/CompilerAPI/bin/Release/netcoreapp2.0/win81-x64 app/win81-x64.zip
  - pwsh: Compress-Archive src/CompilerAPI/bin/Release/netcoreapp2.0/win10-x64 app/win10-x64.zip
  - pwsh: Compress-Archive src/CompilerAPI/bin/Release/netcoreapp2.0/rhel-x64  app/rhel-x64.zip

test_script:
  - pwsh: dotnet test test/AD.OpenXML.Tests -c Release -f netcoreapp2.0 -r win81-x64
  - pwsh: dotnet test test/AD.OpenXML.Tests -c Release -f netcoreapp2.0 -r win10-x64
  - pwsh: dotnet test test/AD.OpenXML.Tests -c Release -f netcoreapp2.0 -r rhel-x64

artifacts:
  - path: app/win81-x64.zip
  - path: app/win10-x64.zip
  - path: app/rhel-x64.zip

deploy_script:
    - pwsh: dotnet nuget push src/AD.OpenXml/bin/release/AD.OpenXml.${env:appveyor_build_version}.nupkg -s ${env:push} -k ${env:nuget}

#deploy:
#  release: CompilerAPI-v$(appveyor_build_version)
##  description: 'Release description'
#  provider: GitHub
#  auth_token:
#    secure: <your encrypted token> # your encrypted token from GitHub
#  artifact: CompilerAPI
#  draft: false
#  prerelease: false
#  on:
#    branch: master                 # release from master branch only
#    appveyor_repo_tag: true        # deploy on tag push only