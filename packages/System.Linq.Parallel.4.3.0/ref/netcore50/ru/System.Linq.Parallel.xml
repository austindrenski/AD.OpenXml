<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Linq.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Linq.OrderedParallelQuery`1">
      <summary>Представляет отсортированную параллельную последовательность.</summary>
      <typeparam name="TSource">Тип элементов в исходной коллекции.</typeparam>
    </member>
    <member name="M:System.Linq.OrderedParallelQuery`1.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий перебор элементов последовательности.</summary>
      <returns>Перечислитель, выполняющий перебор элементов последовательности.</returns>
    </member>
    <member name="T:System.Linq.ParallelEnumerable">
      <summary>Предоставляет набор методов для выполнения запросов к объектам, реализующим ParallelQuery{TSource}.Это параллельный эквивалент объекта <see cref="T:System.Linq.Enumerable" />.</summary>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary>Параллельно применяет к последовательности агрегатную функцию.Эта перегрузка недоступна в последовательной реализации.</summary>
      <returns>Преобразованное конечное агрегатное значение.</returns>
      <param name="source">Последовательность, для которой выполняется статистическая операция.</param>
      <param name="seedFactory">Функция, возвращающая начальное агрегатное значение. </param>
      <param name="updateAccumulatorFunc">Агрегатная функция, вызываемая для каждого элемента в секции. </param>
      <param name="combineAccumulatorsFunc">Агрегатная функция, вызываемая для суммарного результата, полученного из каждой секции.</param>
      <param name="resultSelector">Функция, преобразующая конечное агрегатное значение в результирующее значение. </param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate">Тип агрегатного значения.</typeparam>
      <typeparam name="TResult">Тип результирующего значения.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="seedFactory" /> или <paramref name="updateAccumulatorFunc" /> или <paramref name="combineAccumulatorsFunc" /> или <paramref name="resultSelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
      <summary>Параллельно применяет к последовательности агрегатную функцию.</summary>
      <returns>Конечное агрегатное значение.</returns>
      <param name="source">Последовательность, для которой выполняется статистическая операция.</param>
      <param name="func">Агрегатная функция, вызываемая для каждого элемента.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="func" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
      <summary>Параллельно применяет к последовательности агрегатную функцию.Указанное начальное значение используется в качестве исходного значения агрегатной операции.</summary>
      <returns>Конечное агрегатное значение.</returns>
      <param name="source">Последовательность, для которой выполняется статистическая операция.</param>
      <param name="seed">Начальное агрегатное значение.</param>
      <param name="func">Агрегатная функция, вызываемая для каждого элемента.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate">Тип агрегатного значения.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="func" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <summary>Параллельно применяет к последовательности агрегатную функцию.Указанное начальное значение служит исходным значением для агрегатной операции, а указанная функция используется для выбора результирующего значения.</summary>
      <returns>Преобразованное конечное агрегатное значение.</returns>
      <param name="source">Последовательность, для которой выполняется статистическая операция.</param>
      <param name="seed">Начальное агрегатное значение.</param>
      <param name="func">Агрегатная функция, вызываемая для каждого элемента.</param>
      <param name="resultSelector">Функция, преобразующая конечное агрегатное значение в результирующее значение.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate">Тип агрегатного значения.</typeparam>
      <typeparam name="TResult">Тип результирующего значения.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="func" /> или <paramref name="resultSelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary>Параллельно применяет к последовательности агрегатную функцию.Эта перегрузка недоступна в последовательной реализации.</summary>
      <returns>Преобразованное конечное агрегатное значение.</returns>
      <param name="source">Последовательность, для которой выполняется статистическая операция.</param>
      <param name="seed">Начальное агрегатное значение.</param>
      <param name="updateAccumulatorFunc">Агрегатная функция, вызываемая для каждого элемента в секции. </param>
      <param name="combineAccumulatorsFunc">Агрегатная функция, вызываемая для суммарного результата, полученного из каждой секции. </param>
      <param name="resultSelector">Функция, преобразующая конечное агрегатное значение в результирующее значение. </param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate">Тип агрегатного значения.</typeparam>
      <typeparam name="TResult">Тип результирующего значения.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="updateAccumulatorFunc" /> или <paramref name="combineAccumulatorsFunc" /> или <paramref name="resultSelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Параллельно проверяет, все ли элементы последовательности удовлетворяют условию.</summary>
      <returns>значение true, если каждый элемент исходной последовательности проходит проверку, определяемую указанным предикатом, или если последовательность пуста; в противном случае — значение false.</returns>
      <param name="source">Последовательность, к элементам которой применяется предикат.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
      <summary>Проверяет, содержит ли параллельная последовательность какие-либо элементы.</summary>
      <returns>Значение true, если исходная последовательность содержит какие-либо элементы; в противном случае — значение false.</returns>
      <param name="source">Последовательность, проверяемая на наличие элементов.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Параллельно проверяет, удовлетворяет ли условию хотя бы один элемент в последовательности.</summary>
      <returns>Значение true, если хотя бы один элемент исходной последовательности проходит проверку, определяемую указанным предикатом; в противном случае — значение false.</returns>
      <param name="source">Последовательность, к элементам которой применяется предикат.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
      <summary>Преобразует запрос <see cref="T:System.Linq.ParallelQuery`1" /> в интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" /> для принудительного последовательного вычисления запроса.</summary>
      <returns>Входная последовательность, приведенная к типу <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
      <param name="source">Последовательность, преобразуемая к типу <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
      <summary>Позволяет обрабатывать источник данных как упорядоченный независимо от отсутствия упорядоченности по умолчанию.Метод AsOrdered можно вызывать только для неуниверсальных последовательностей, возвращаемых методами AsParallel, ParallelEnumerable.Range и ParallelEnumerable.Repeat.</summary>
      <returns>Исходная последовательность, поддерживающая первоначальный порядок в последовательных операторах запроса.</returns>
      <param name="source">Входная последовательность.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">Создается, если <paramref name="source" /> не содержит элементов.-или-если происходит вызов AsOrdered через запрос.Можно вызывать его немедленно после <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> или <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
      <summary>Позволяет обрабатывать источник данных как упорядоченный независимо от отсутствия упорядоченности по умолчанию.Метод AsOrdered можно вызывать только для универсальных последовательностей, возвращаемых методами AsParallel, ParallelEnumerable.Range и ParallelEnumerable.Repeat.</summary>
      <returns>Исходная последовательность, поддерживающая первоначальный порядок в последовательных операторах запроса.</returns>
      <param name="source">Входная последовательность.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">Создается, если <paramref name="source" /> не содержит элементов.-или-если <paramref name="source" /> не равен одному из значений: AsParallel, ParallelEnumerable.Range или ParallelEnumerable.Repeat.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
      <summary>Позволяет осуществлять параллельный запрос, производимый модулем секционирования, предназначенным для разделения входной последовательности на секции.</summary>
      <returns>Значение источника <paramref name="source" /> в форме ParallelQuery для привязки к методам расширения ParallelEnumerable.</returns>
      <param name="source">Разделитель входной последовательности.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Позволяет осуществлять параллельный запрос.</summary>
      <returns>Источник как <see cref="T:System.Linq.ParallelQuery`1" /> для привязки к методам расширения ParallelEnumerable.</returns>
      <param name="source">Коллекция <see cref="T:System.Collections.Generic.IEnumerable`1" />, преобразуемая в объект <see cref="T:System.Linq.ParallelQuery`1" />.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
      <summary>Позволяет осуществлять параллельный запрос.</summary>
      <returns>Значение источника source в форме ParallelQuery для привязки к методам расширения ParallelEnumerable.</returns>
      <param name="source">Коллекция <see cref="T:System.Collections.Generic.IEnumerable`1" />, преобразуемая в объект <see cref="T:System.Linq.ParallelQuery" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
      <summary>Преобразует запрос <see cref="T:System.Linq.ParallelQuery`1" /> в интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" /> для принудительного последовательного вычисления запроса.</summary>
      <returns>Источник в виде коллекции <see cref="T:System.Collections.Generic.IEnumerable`1" /> для привязки к последовательным методам расширения.</returns>
      <param name="source">
        <see cref="T:System.Linq.ParallelQuery`1" /> для преобразования в интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
      <summary>Позволяет обрабатывать промежуточный запрос как содержащий неупорядоченные элементы.</summary>
      <returns>Исходная последовательность со случайным порядком.</returns>
      <param name="source">Входная последовательность.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма или число элементов последовательности больше, чем <see cref="F:System.Int32.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма или число элементов последовательности больше, чем <see cref="F:System.Int32.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений.</summary>
      <returns>Возвращает среднее для последовательности значений.</returns>
      <param name="source">Исходная последовательность.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">Последовательность значений, которые используются для расчета среднего. Среднее последовательности значений. <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма или число элементов последовательности больше, чем <see cref="F:System.Int32.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма или число элементов последовательности больше, чем <see cref="F:System.Int32.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
      <exception cref="T:System.OverflowException">(Создано в качестве внутреннего исключения в <see cref="T:System.AggregateException" />).Функция <paramref name="selector" /> возвращает значение, большее, чем MaxValue для типа элемента.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
      <exception cref="T:System.OverflowException">(Создано в качестве внутреннего исключения в <see cref="T:System.AggregateException" />).Функция <paramref name="selector" /> возвращает значение, большее, чем MaxValue для типа элемента.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма или число элементов последовательности больше, чем <see cref="F:System.Int32.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
      <exception cref="T:System.OverflowException">(Создано в качестве внутреннего исключения в <see cref="T:System.AggregateException" />).Функция <paramref name="selector" /> возвращает значение, большее, чем MaxValue для типа элемента.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма или число элементов последовательности больше, чем <see cref="F:System.Int32.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
      <exception cref="T:System.OverflowException">(Создано в качестве внутреннего исключения в <see cref="T:System.AggregateException" />).Функция <paramref name="selector" /> возвращает значение, большее, чем MaxValue для типа элемента.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
      <exception cref="T:System.OverflowException">(Создано в качестве внутреннего исключения в <see cref="T:System.AggregateException" />).Функция <paramref name="selector" /> возвращает значение, большее, чем MaxValue для типа элемента.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
      <exception cref="T:System.OverflowException">(Создано в качестве внутреннего исключения в <see cref="T:System.AggregateException" />).Функция <paramref name="selector" /> возвращает значение, большее, чем MaxValue для типа элемента.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма или число элементов последовательности больше, чем <see cref="F:System.Int32.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
      <exception cref="T:System.OverflowException">(Создано в качестве внутреннего исключения в <see cref="T:System.AggregateException" />).Функция <paramref name="selector" /> возвращает значение, большее, чем MaxValue для типа элемента.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма или число элементов последовательности больше, чем <see cref="F:System.Int64.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
      <exception cref="T:System.OverflowException">(Создано в качестве внутреннего исключения в <see cref="T:System.AggregateException" />).Функция <paramref name="selector" /> возвращает значение, большее, чем MaxValue для типа элемента.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
      <exception cref="T:System.OverflowException">(Создано в качестве внутреннего исключения в <see cref="T:System.AggregateException" />).Функция <paramref name="selector" /> возвращает значение, большее, чем MaxValue для типа элемента.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary>Параллельно вычисляет среднее значение для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Среднее для последовательности значений.</returns>
      <param name="source">Последовательность значений, используемых для вычисления среднего.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
      <exception cref="T:System.OverflowException">(Создано в качестве внутреннего исключения в <see cref="T:System.AggregateException" />).Функция <paramref name="selector" /> возвращает значение, большее, чем MaxValue для типа элемента.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
      <summary>Преобразует элементы запроса ParallelQuery в заданный тип.</summary>
      <returns>Последовательность, которая содержит все элементы исходной последовательности, преобразованные в заданный тип.</returns>
      <param name="source">Последовательность, содержащая преобразуемые элементы.</param>
      <typeparam name="TResult">Тип, в который преобразуются элементы объекта <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidCastException">Не удалось преобразовать тип исходной коллекции в <paramref name="TResult" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>Эту перегрузку Concat вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="first">Этот параметр не используется.</param>
      <param name="second">Этот параметр не используется.</param>
      <typeparam name="TSource">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.NotSupportedException">Исключение, которое возникает при вызове этого метода.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>Сцепляет две параллельные последовательности.</summary>
      <returns>Последовательность, содержащая сцепленные элементы двух входных последовательностей.</returns>
      <param name="first">Первая из объединяемых последовательностей.</param>
      <param name="second">Последовательность, объединяемая с первой последовательностью.</param>
      <typeparam name="TSource">Тип элементов входных последовательностей.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> или <paramref name="second" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
      <summary>Параллельно определяет, содержится ли указанный элемент в последовательности, используя компаратор проверки на равенство по умолчанию.</summary>
      <returns>Значение true, если исходная последовательность содержит элемент с указанным значением; в противном случае — значение false.</returns>
      <param name="source">Последовательность, в которой требуется найти данное значение.</param>
      <param name="value">Значение, которое требуется найти в последовательности.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Параллельно определяет, содержит ли последовательность заданный элемент, используя указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <returns>Значение true, если исходная последовательность содержит элемент с указанным значением; в противном случае — значение false.</returns>
      <param name="source">Последовательность, в которой требуется найти данное значение.</param>
      <param name="value">Значение, которое требуется найти в последовательности.</param>
      <param name="comparer">Компаратор проверки на равенство, используемый для сравнения значений.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
      <summary>Возвращает количество элементов в параллельной последовательности.</summary>
      <returns>Число элементов во входной последовательности.</returns>
      <param name="source">Последовательность, элементы которой требуется подсчитать.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Число элементов в исходном объекте больше, чем <see cref="F:System.Int32.MaxValue" />.(В таком случае InnerException является <see cref="T:System.OverflowException" />) -или- Одно или несколько исключений произошло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Возвращает число, представляющее количество элементов параллельной последовательности, удовлетворяющих заданному условию.</summary>
      <returns>Число, представляющее количество элементов последовательности, удовлетворяющих условию функции предиката.</returns>
      <param name="source">Последовательность, элементы которой требуется подсчитать.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Число элементов в исходном объекте больше, чем <see cref="F:System.Int32.MaxValue" />.(В таком случае InnerException является <see cref="T:System.OverflowException" />) -или- Одно или несколько исключений произошло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
      <summary>Возвращает элементы указанной параллельной последовательности или одноэлементную коллекцию, содержащую значение параметра типа по умолчанию, если последовательность пуста.</summary>
      <returns>Последовательность, содержащая default(TSource), если последовательность <paramref name="source" /> пуста; в противном случае — <paramref name="source" />.</returns>
      <param name="source">Последовательность, для которой возвращается значение по умолчанию, если она пуста.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
      <summary>Возвращает элементы указанной параллельной последовательности или одноэлементную коллекцию, содержащую указанное значение, если последовательность пуста.</summary>
      <returns>Последовательность, содержащая defaultValue, если последовательность <paramref name="source" /> пуста; в противном случае — <paramref name="source" />.</returns>
      <param name="source">Последовательность, для которой возвращается указанное значение, если она пуста.</param>
      <param name="defaultValue">Значение, возвращаемое в случае пустой последовательности.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
      <summary>Возвращает различающиеся элементы параллельной последовательности, используя для сравнения значений компаратор проверки на равенство по умолчанию.</summary>
      <returns>Последовательность, содержащая различающиеся элементы из исходной последовательности.</returns>
      <param name="source">Последовательность, из которой требуется удалить дубликаты элементов.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Возвращает различающиеся элементы параллельной последовательности, используя для сравнения значений указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <returns>Последовательность, содержащая различающиеся элементы из исходной последовательности.</returns>
      <param name="source">Последовательность, из которой требуется удалить дубликаты элементов.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>Возвращает элемент по указанному индексу в параллельной последовательности.</summary>
      <returns>Элемент, находящийся в указанной позиции в исходной последовательности.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элемент.</param>
      <param name="index">Отсчитываемый от нуля индекс извлекаемого элемента.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="index" /> меньше 0 либо больше или равно числу элементов последовательности <paramref name="source" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>Возвращает элемент по указанному индексу в параллельной последовательности или значение по умолчанию, если индекс вне допустимого диапазона.</summary>
      <returns>Default(TSource), если индекс находится за пределами исходной последовательности; в противном случае — элемент в указанной позиции в исходной последовательности.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элемент.</param>
      <param name="index">Отсчитываемый от нуля индекс извлекаемого элемента.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Empty``1">
      <summary>Возвращает пустой набор ParallelQuery{TResult} с указанным аргументом типа.</summary>
      <returns>Пустая последовательность с аргументом типа <paramref name="TResult" />.</returns>
      <typeparam name="TResult">Тип, присваиваемый параметру типа возвращаемой универсальной последовательности.</typeparam>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>Эту перегрузку Except вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="first">Этот параметр не используется.</param>
      <param name="second">Этот параметр не используется.</param>
      <typeparam name="TSource">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.NotSupportedException">Исключение, которое возникает при вызове этого метода.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Эту перегрузку Except вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="first">Этот параметр не используется.</param>
      <param name="second">Этот параметр не используется.</param>
      <param name="comparer">Этот параметр не используется.</param>
      <typeparam name="TSource">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.NotSupportedException">Исключение, которое возникает при вызове этого метода.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>Находит разность множеств, представленных двумя параллельными последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию.</summary>
      <returns>Последовательность, представляющая собой разность двух последовательностей как множеств.</returns>
      <param name="first">Последовательность, элементы которой, отсутствующие в последовательности <paramref name="second" />, будут возвращены.</param>
      <param name="second">Последовательность, элементы которой, входящие также в первую последовательность, должны быть исключены из возвращаемой последовательности.</param>
      <typeparam name="TSource">Тип элементов входных последовательностей.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> или <paramref name="second" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Находит разность множеств, представленных двумя параллельными последовательностями, используя для сравнения значений указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <returns>Последовательность, представляющая собой разность двух последовательностей как множеств.</returns>
      <param name="first">Последовательность, элементы которой, отсутствующие в последовательности <paramref name="second" />, будут возвращены.</param>
      <param name="second">Последовательность, элементы которой, входящие также в первую последовательность, должны быть исключены из возвращаемой последовательности. </param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.</param>
      <typeparam name="TSource">Тип элементов входных последовательностей.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> или <paramref name="second" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
      <summary>Возвращает первый элемент параллельной последовательности.</summary>
      <returns>Первый элемент указанной последовательности.</returns>
      <param name="source">Последовательность, из которой требуется возвратить первый элемент.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Возвращает первый элемент параллельной последовательности, удовлетворяющий указанному условию.</summary>
      <returns>Первый элемент последовательности, который прошел проверку, определенную указанной функцией предиката.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элемент.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Ни один элемент <paramref name="source" /> не удовлетворяет условию предиката <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary>Возвращает первый элемент параллельной последовательности или значение по умолчанию, если последовательность не содержит элементов.</summary>
      <returns>default(TSource), если последовательность <paramref name="source" /> пуста; в противном случае — первый элемент последовательности <paramref name="source" />.</returns>
      <param name="source">Последовательность, из которой требуется возвратить первый элемент.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Возвращает первый удовлетворяющий условию элемент параллельной последовательности или значение по умолчанию, если таких элементов не найдено.</summary>
      <returns>default(TSource), если последовательность <paramref name="source" /> пуста или ни один ее элемент не прошел проверку, определенную предикатом; в противном случае — первый элемент последовательности <paramref name="source" />, прошедший проверку, определенную предикатом.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элемент.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
      <summary>Параллельно вызывает указанные действия для всех элементов в последовательности <paramref name="source" />.</summary>
      <param name="source">Объект <see cref="T:System.Linq.ParallelQuery`1" />, элементы которого обрабатываются действием <paramref name="action" />.</param>
      <param name="action">Действие, вызываемое для каждого элемента.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Группирует элементы параллельной последовательности в соответствии с заданной функцией селектора ключа.</summary>
      <returns>Последовательность групп, сортируемая в порядке убывания по параметру <paramref name="TKey" />.</returns>
      <param name="source">Объект OrderedParallelQuery{TSource}, который содержит элементы для сортировки.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Группирует элементы параллельной последовательности в соответствии с заданной функцией выбора ключа и сравнивает ключи с помощью указанного компаратора <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <returns>Последовательность групп, сортируемая в порядке убывания по параметру <paramref name="TKey" />.</returns>
      <param name="source">Объект <see cref="T:System.Linq.OrderedParallelQuery`1" />, содержащий сортируемые элементы.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />&gt;.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>Группирует элементы параллельной последовательности в соответствии с заданной функцией селектора ключа и проецирует элементы каждой группы с помощью указанной функции.</summary>
      <returns>Последовательность групп, сортируемая в порядке убывания по параметру <paramref name="TKey" />.</returns>
      <param name="source">Объект <see cref="T:System.Linq.OrderedParallelQuery`1" />, содержащий сортируемые элементы.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="elementSelector">Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">Тип элементов объекта <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Группирует элементы параллельной последовательности в соответствии с функцией селектора ключа.Ключи сравниваются с помощью компаратора, элементы каждой группы проецируются с помощью указанной функции.</summary>
      <returns>Последовательность групп, сортируемая в порядке убывания по параметру <paramref name="TKey" />.</returns>
      <param name="source">Объект OrderedParallelQuery{TSource}, который содержит элементы для сортировки.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="elementSelector">Функция, сопоставляющая каждый исходный элемент с элементом в IGrouping.</param>
      <param name="comparer">Компаратор IComparer{TSource}, используемый для сравнения ключей.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">Тип элементов в IGrouping.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <summary>Группирует элементы параллельной последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа.Элементы каждой группы проецируются с помощью указанной функции.</summary>
      <returns>Последовательность элементов типа <paramref name="TResult" />, в которой каждый элемент представляет проекцию группы и ее ключа.</returns>
      <param name="source">Последовательность, элементы которой требуется сгруппировать.</param>
      <param name="keySelector">Функция, извлекающая ключ для каждого элемента.</param>
      <param name="elementSelector">Функция, сопоставляющая каждый исходный элемент с элементом в IGrouping&lt;TKey, TElement&gt;.</param>
      <param name="resultSelector">Функция для создания результирующего значения для каждой группы.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">Тип элементов в каждом IGrouping{TKey, TElement}.</typeparam>
      <typeparam name="TResult">Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа.Значения ключей сравниваются с помощью указанного компаратора, элементы каждой группы проецируются с помощью указанной функции.</summary>
      <returns>Последовательность элементов типа <paramref name="TResult" />, в которой каждый элемент представляет проекцию группы и ее ключа.</returns>
      <param name="source">Последовательность, элементы которой требуется сгруппировать.</param>
      <param name="keySelector">Функция, извлекающая ключ для каждого элемента.</param>
      <param name="elementSelector">Функция, сопоставляющая каждый исходный элемент с элементом в IGrouping{Key, TElement}.</param>
      <param name="resultSelector">Функция для создания результирующего значения для каждой группы.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">Тип элементов в каждом IGrouping{TKey, TElement}.</typeparam>
      <typeparam name="TResult">Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <summary>Группирует элементы параллельной последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа.</summary>
      <returns>Последовательность элементов типа <paramref name="TResult" />, в которой каждый элемент представляет проекцию группы и ее ключа.</returns>
      <param name="source">Последовательность, элементы которой требуется сгруппировать.</param>
      <param name="keySelector">Функция, извлекающая ключ для каждого элемента.</param>
      <param name="resultSelector">Функция для создания результирующего значения для каждой группы.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult">Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Группирует элементы параллельной последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа.Ключи сравниваются с использованием заданного компаратора.</summary>
      <returns>Последовательность групп.</returns>
      <param name="source">Последовательность, элементы которой требуется сгруппировать.</param>
      <param name="keySelector">Функция, извлекающая ключ для каждого элемента.</param>
      <param name="resultSelector">Функция для создания результирующего значения для каждой группы.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult">Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary>Эту перегрузку GroupJoin вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="outer">Этот параметр не используется.</param>
      <param name="inner">Этот параметр не используется.</param>
      <param name="outerKeySelector">Этот параметр не используется.</param>
      <param name="innerKeySelector">Этот параметр не используется.</param>
      <param name="resultSelector">Этот параметр не используется.</param>
      <typeparam name="TOuter">Этот параметр типа не используется.</typeparam>
      <typeparam name="TInner">Этот параметр типа не используется.</typeparam>
      <typeparam name="TKey">Этот параметр типа не используется.</typeparam>
      <typeparam name="TResult">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>Эту перегрузку GroupJoin вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="outer">Этот параметр не используется.</param>
      <param name="inner">Этот параметр не используется.</param>
      <param name="outerKeySelector">Этот параметр не используется.</param>
      <param name="innerKeySelector">Этот параметр не используется.</param>
      <param name="resultSelector">Этот параметр не используется.</param>
      <param name="comparer">Этот параметр не используется.</param>
      <typeparam name="TOuter">Этот параметр типа не используется.</typeparam>
      <typeparam name="TInner">Этот параметр типа не используется.</typeparam>
      <typeparam name="TKey">Этот параметр типа не используется.</typeparam>
      <typeparam name="TResult">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.NotSupportedException">Исключение, которое возникает при вызове этого метода.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary>Устанавливает параллельную корреляцию между элементами двух последовательностей на основе равенства ключей и группирует результаты.Для сравнения ключей используется компаратор проверки на равенство по умолчанию.</summary>
      <returns>Последовательность, которая содержит элементы типа <paramref name="TResult" />, полученные в результате соединения двух последовательностей с группировкой.</returns>
      <param name="outer">Первая последовательность для соединения.</param>
      <param name="inner">Последовательность, соединяемая с первой последовательностью.</param>
      <param name="outerKeySelector">Функция, извлекающая ключ соединения из каждого элемента первой последовательности.</param>
      <param name="innerKeySelector">Функция, извлекающая ключ соединения из каждого элемента второй последовательности.</param>
      <param name="resultSelector">Функция, создающая результирующий элемент для элемента первой последовательности и коллекции соответствующих элементов второй последовательности.</param>
      <typeparam name="TOuter">Тип элементов второй последовательности.</typeparam>
      <typeparam name="TInner">Тип элементов первой последовательности.</typeparam>
      <typeparam name="TKey">Тип ключей, возвращаемых функциями селектора ключа.</typeparam>
      <typeparam name="TResult">Тип результирующих элементов.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>Устанавливает параллельную корреляцию между элементами двух последовательностей на основе равенства ключа и группирует результаты.Для сравнения ключей используется указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <returns>Последовательность, которая содержит элементы типа <paramref name="TResult" />, полученные в результате соединения двух последовательностей с группировкой.</returns>
      <param name="outer">Первая последовательность для соединения.</param>
      <param name="inner">Последовательность, соединяемая с первой последовательностью.</param>
      <param name="outerKeySelector">Функция, извлекающая ключ соединения из каждого элемента первой последовательности.</param>
      <param name="innerKeySelector">Функция, извлекающая ключ соединения из каждого элемента второй последовательности.</param>
      <param name="resultSelector">Функция, создающая результирующий элемент для элемента первой последовательности и коллекции соответствующих элементов второй последовательности.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для хэширования и сравнения ключей.</param>
      <typeparam name="TOuter">Тип элементов второй последовательности.</typeparam>
      <typeparam name="TInner">Тип элементов первой последовательности.</typeparam>
      <typeparam name="TKey">Тип ключей, возвращаемых функциями селектора ключа.</typeparam>
      <typeparam name="TResult">Тип результирующих элементов.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>Эту перегрузку Intersect вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="first">Этот параметр не используется.</param>
      <param name="second">Этот параметр не используется.</param>
      <typeparam name="TSource">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.NotSupportedException">Исключение, которое возникает при вызове этого метода.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Эту перегрузку Intersect вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="first">Этот параметр не используется.</param>
      <param name="second">Этот параметр не используется.</param>
      <param name="comparer">Этот параметр не используется.</param>
      <typeparam name="TSource">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.NotSupportedException">Исключение, которое возникает при вызове этого метода.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>Находит пересечение множеств, представленных двумя параллельными последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию.</summary>
      <returns>Последовательность элементов, представляющая собой пересечение двух заданных последовательностей как множеств.</returns>
      <param name="first">Последовательность, из которой возвращаются различающиеся элементы, входящие также в <paramref name="second" />.</param>
      <param name="second">Последовательность, из которой возвращаются различающиеся элементы, входящие также в первую последовательность.</param>
      <typeparam name="TSource">Тип элементов входных последовательностей.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Находит пересечение множеств, представленных двумя параллельными последовательностями, используя для сравнения значений указанный компаратор IEqualityComparer{T}.</summary>
      <returns>Последовательность элементов, представляющая собой пересечение двух заданных последовательностей как множеств.</returns>
      <param name="first">Последовательность, из которой возвращаются различающиеся элементы, входящие также в <paramref name="second" />.</param>
      <param name="second">Последовательность, из которой возвращаются различающиеся элементы, входящие также в первую последовательность.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.</param>
      <typeparam name="TSource">Тип элементов входных последовательностей.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary>Эту перегрузку Join вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="outer">Этот параметр не используется.</param>
      <param name="inner">Этот параметр не используется.</param>
      <param name="outerKeySelector">Этот параметр не используется.</param>
      <param name="innerKeySelector">Этот параметр не используется.</param>
      <param name="resultSelector">Этот параметр не используется.</param>
      <typeparam name="TOuter">Этот параметр типа не используется.</typeparam>
      <typeparam name="TInner">Этот параметр типа не используется.</typeparam>
      <typeparam name="TKey">Этот параметр типа не используется.</typeparam>
      <typeparam name="TResult">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>Эту перегрузку Join вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="outer">Этот параметр не используется.</param>
      <param name="inner">Этот параметр не используется.</param>
      <param name="outerKeySelector">Этот параметр не используется.</param>
      <param name="innerKeySelector">Этот параметр не используется.</param>
      <param name="resultSelector">Этот параметр не используется.</param>
      <param name="comparer">Этот параметр не используется.</param>
      <typeparam name="TOuter">Этот параметр типа не используется.</typeparam>
      <typeparam name="TInner">Этот параметр типа не используется.</typeparam>
      <typeparam name="TKey">Этот параметр типа не используется.</typeparam>
      <typeparam name="TResult">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.NotSupportedException">Исключение, которое возникает при вызове этого метода.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary>Устанавливает параллельную корреляцию между элементами двух последовательностей на основе сопоставления ключей.Для сравнения ключей используется компаратор проверки на равенство по умолчанию.</summary>
      <returns>Последовательность, которая содержит элементы типа <paramref name="TResult" />, полученные в результате внутреннего соединения двух последовательностей.</returns>
      <param name="outer">Первая последовательность для соединения.</param>
      <param name="inner">Последовательность, соединяемая с первой последовательностью.</param>
      <param name="outerKeySelector">Функция, извлекающая ключ соединения из каждого элемента первой последовательности.</param>
      <param name="innerKeySelector">Функция, извлекающая ключ соединения из каждого элемента второй последовательности.</param>
      <param name="resultSelector">Функция для создания результирующего элемента для пары соответствующих элементов.</param>
      <typeparam name="TOuter">Тип элементов второй последовательности.</typeparam>
      <typeparam name="TInner">Тип элементов первой последовательности.</typeparam>
      <typeparam name="TKey">Тип ключей, возвращаемых функциями селектора ключа.</typeparam>
      <typeparam name="TResult">Тип результирующих элементов.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>Устанавливает параллельную корреляцию между элементами двух последовательностей на основе сопоставления ключей.Для сравнения ключей используется указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <returns>Последовательность, которая содержит элементы типа <paramref name="TResult" />, полученные в результате внутреннего соединения двух последовательностей.</returns>
      <param name="outer">Первая последовательность для соединения.</param>
      <param name="inner">Последовательность, соединяемая с первой последовательностью.</param>
      <param name="outerKeySelector">Функция, извлекающая ключ соединения из каждого элемента первой последовательности.</param>
      <param name="innerKeySelector">Функция, извлекающая ключ соединения из каждого элемента второй последовательности.</param>
      <param name="resultSelector">Функция для создания результирующего элемента для пары соответствующих элементов.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для хэширования и сравнения ключей.</param>
      <typeparam name="TOuter">Тип элементов второй последовательности.</typeparam>
      <typeparam name="TInner">Тип элементов первой последовательности.</typeparam>
      <typeparam name="TKey">Тип ключей, возвращаемых функциями селектора ключа.</typeparam>
      <typeparam name="TResult">Тип результирующих элементов.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="action" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
      <summary>Возвращает последний элемент параллельной последовательности.</summary>
      <returns>Значение, находящееся в последней позиции исходной последовательности.</returns>
      <param name="source">Последовательность, из которой требуется возвратить последний элемент.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Возвращает последний элемент параллельной последовательности, удовлетворяющий указанному условию.</summary>
      <returns>Последний элемент последовательности, который прошел проверку, определенную указанной функцией предиката.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элемент.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Ни один элемент <paramref name="source" /> не удовлетворяет условию предиката <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary>Возвращает последний элемент параллельной последовательности или значение по умолчанию, если последовательность не содержит элементов.</summary>
      <returns>Default(), если исходная последовательность пуста; в противном случае — последний элемент в последовательности.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элемент.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Возвращает последний элемент параллельной последовательности, удовлетворяющий указанному условию, или значение по умолчанию, если ни одного такого элемента не найдено.</summary>
      <returns>default(), если последовательность пуста или ни один ее элемент не прошел проверку функцией предиката; в противном случае — последний элемент, прошедший проверку функцией предиката.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элемент.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
      <summary>Возвращает значение типа Int64, представляющее общее число элементов в параллельной последовательности.</summary>
      <returns>Число элементов во входной последовательности.</returns>
      <param name="source">Последовательность, элементы которой требуется подсчитать.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Число элементов в исходном объекте больше, чем <see cref="F:System.Int64.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.OverflowException">Вычисленный результат больше <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Возвращает значение типа Int64, представляющее число элементов параллельной последовательности, удовлетворяющих заданному условию.</summary>
      <returns>Число, представляющее количество элементов последовательности, удовлетворяющих условию функции предиката.</returns>
      <param name="source">Последовательность, элементы которой требуется подсчитать.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Число элементов в исходном объекте больше, чем <see cref="F:System.Int64.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.OverflowException">Вычисленный результат больше <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
      <summary>Возвращает максимальное значение, которое содержится в параллельно обрабатываемой последовательности значений.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
      <summary>Возвращает максимальное значение, которое содержится в параллельно обрабатываемой последовательности значений.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
      <summary>Возвращает максимальное значение, которое содержится в параллельно обрабатываемой последовательности значений.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
      <summary>Возвращает максимальное значение, которое содержится в параллельно обрабатываемой последовательности значений.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary>Возвращает максимальное значение, которое содержится в параллельно обрабатываемой последовательности значений.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary>Возвращает максимальное значение, которое содержится в параллельно обрабатываемой последовательности значений.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary>Возвращает максимальное значение, которое содержится в параллельно обрабатываемой последовательности значений.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary>Возвращает максимальное значение, которое содержится в параллельно обрабатываемой последовательности значений.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary>Возвращает максимальное значение, которое содержится в параллельно обрабатываемой последовательности значений.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
      <summary>Возвращает максимальное значение, которое содержится в параллельно обрабатываемой последовательности значений.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
      <summary>Возвращает максимальное значение, которое содержится в параллельно обрабатываемой последовательности значений.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <typeparam name="TSource">Тип элементов исходной последовательности.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение.</summary>
      <returns>Максимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется максимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TResult">Тип значения, возвращаемого функцией <paramref name="selector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
      <summary>Возвращает минимальное значение, которое содержится в параллельной последовательности значений.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
      <summary>Возвращает минимальное значение, которое содержится в параллельной последовательности значений.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
      <summary>Возвращает минимальное значение, которое содержится в параллельной последовательности значений.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
      <summary>Возвращает минимальное значение, которое содержится в параллельной последовательности значений.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary>Возвращает минимальное значение, которое содержится в параллельной последовательности значений.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary>Возвращает минимальное значение, которое содержится в параллельной последовательности значений.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary>Возвращает минимальное значение, которое содержится в параллельной последовательности значений.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary>Возвращает минимальное значение, которое содержится в параллельной последовательности значений.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary>Возвращает минимальное значение, которое содержится в параллельной последовательности значений.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
      <summary>Возвращает минимальное значение, которое содержится в параллельной последовательности значений.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
      <summary>Возвращает минимальное значение, которое содержится в параллельной последовательности значений.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Последовательность <paramref name="source" /> не содержит элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Параллельно вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение.</summary>
      <returns>Минимальное значение в последовательности.</returns>
      <param name="source">Последовательность значений, для которой определяется минимальное значение.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TResult">Тип значения, возвращаемого функцией <paramref name="selector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит элементов и <paramref name="TSource" /> является типом, не поддерживающий значение NULL.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
      <summary>Выполняет фильтрацию элементов ParallelQuery по заданному типу.</summary>
      <returns>Последовательность, содержащая элементы входной последовательности типа.</returns>
      <param name="source">Последовательность, элементы которой следует фильтровать.</param>
      <typeparam name="TResult">Тип, по которому фильтруются элементы последовательности.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Параллельно сортирует элементы последовательности в порядке возрастания ключа.</summary>
      <returns>Объект OrderedParallelQuery{TSource}, элементы которого отсортированы по ключу.</returns>
      <param name="source">Последовательность значений, которые следует упорядочить.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Параллельно сортирует элементы последовательности в порядке возрастания с использованием указанного компаратора.</summary>
      <returns>Объект OrderedParallelQuery{TSource}, элементы которого отсортированы по ключу.</returns>
      <param name="source">Последовательность значений, которые следует упорядочить.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer">Компаратор IComparer{TKey}, используемый для сравнения ключей.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Параллельно сортирует элементы последовательности в порядке убывания ключа.</summary>
      <returns>Объект OrderedParallelQuery{TSource}, элементы которого отсортированы по ключу в порядке убывания.</returns>
      <param name="source">Последовательность значений, которые следует упорядочить.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Сортирует элементы последовательности в порядке убывания с использованием указанного компаратора.</summary>
      <returns>Объект OrderedParallelQuery{TSource}, элементы которого отсортированы по ключу в порядке убывания.</returns>
      <param name="source">Последовательность значений, которые следует упорядочить.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer">Компаратор IComparer{TKey}, используемый для сравнения ключей.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="KeySelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
      <summary>Генерирует параллельную последовательность целых чисел в заданном диапазоне.</summary>
      <returns>Интерфейс IEnumerable&lt;Int32&gt; в C# или IEnumerable(Of Int32) в Visual Basic, содержащий диапазон последовательных целых чисел.</returns>
      <param name="start">Значение первого целого числа для последовательности.</param>
      <param name="count">Количество генерируемых последовательных целых чисел.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> меньше 0 -или- <paramref name="start" /> + <paramref name="count" /> - 1 больше <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
      <summary>Создает параллельную последовательность, содержащую одно повторяющееся значение.</summary>
      <returns>Последовательность, содержащая повторяющееся значение.</returns>
      <param name="element">Повторяемое значение.</param>
      <param name="count">Требуемое число повторений данного значения в создаваемой последовательности.</param>
      <typeparam name="TResult">Тип значения, которое будет повторяться в результирующей последовательности.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> меньше 0.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
      <summary>Изменяет порядок элементов параллельной последовательности на противоположный.</summary>
      <returns>Последовательность, элементы которой соответствуют элементам входной последовательности, но следуют в противоположном порядке.</returns>
      <param name="source">Последовательность значений, которые следует расставить в обратном порядке.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Параллельно проецирует каждый элемент последовательности в новую форму.</summary>
      <returns>Последовательность, элементы которой получены в результате вызова функции преобразования для каждого элемента последовательности <paramref name="source" />.</returns>
      <param name="source">Последовательность значений, для которых вызывается функция преобразования.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TResult">Тип элементов, возвращаемых селектором.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
      <summary>Параллельно проецирует каждый элемент последовательности в новую форму, добавляя индекс элемента.</summary>
      <returns>Последовательность, элементы которой получены в результате вызова функции преобразования для каждого элемента <paramref name="source" /> на основе индекса, предоставленного в <paramref name="selector" />.</returns>
      <param name="source">Последовательность значений, для которых вызывается функция преобразования.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TResult">Тип элементов, возвращаемых селектором.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.OverflowException">Более чем <see cref="F:System.Int32.MaxValue" /> элементов перечисляются запросом.Это условие может возникнуть в сценариях потоковой передачи.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary>Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, объединяет результирующие последовательности в одну и вызывает функцию селектора результата для каждого элемента этой последовательности.</summary>
      <returns>Последовательность, элементы которой получены в результате вызова функции преобразования "один ко многим" <paramref name="collectionSelector" /> для каждого элемента последовательности <paramref name="source" /> на основании переданного в <paramref name="collectionSelector" /> индекса и последующего сопоставления каждого элемента такой промежуточной последовательности и соответствующего ему исходного элемента с полученным элементом. </returns>
      <param name="source">Последовательность значений, которые следует проецировать.</param>
      <param name="collectionSelector">Функция преобразования, применяемая к каждому исходному элементу; второй параметр функции представляет индекс исходного элемента.</param>
      <param name="resultSelector">Функция, создающая результирующий элемент для элемента первой последовательности и коллекции соответствующих элементов второй последовательности.</param>
      <typeparam name="TSource">Тип промежуточных элементов, собранных функцией <paramref name="collectionSelector" />.</typeparam>
      <typeparam name="TCollection">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TResult">Тип элементов полученной последовательности.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Более чем <see cref="F:System.Int32.MaxValue" /> элементов перечисляются запросом.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
      <summary>Проецирует параллельно каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> и объединяет результирующие последовательности в одну последовательность.</summary>
      <returns>Последовательность, элементы которой получены в результате вызова функции преобразования "один ко многим" для каждого элемента входной последовательности.</returns>
      <param name="source">Последовательность значений, которые следует проецировать.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TResult">Тип элементов последовательности, возвращаемой селектором.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary>Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, объединяет результирующие последовательности в одну и вызывает функцию селектора результата для каждого элемента этой последовательности.Индекс каждого элемента исходной последовательности используется в промежуточной проецированной форме этого элемента.</summary>
      <returns>Последовательность, элементы которой получены в результате вызова функции преобразования "один ко многим" <paramref name="collectionSelector" /> для каждого элемента последовательности <paramref name="source" /> на основании переданного в <paramref name="collectionSelector" /> индекса и последующего сопоставления каждого элемента такой промежуточной последовательности и соответствующего ему исходного элемента с полученным элементом.</returns>
      <param name="source">Последовательность значений, которые следует проецировать.</param>
      <param name="collectionSelector">Функция преобразования, применяемая к каждому исходному элементу; второй параметр функции представляет индекс исходного элемента.</param>
      <param name="resultSelector">Функция, создающая результирующий элемент для элемента первой последовательности и коллекции соответствующих элементов второй последовательности.</param>
      <typeparam name="TSource">Тип промежуточных элементов, собранных функцией <paramref name="collectionSelector" />.</typeparam>
      <typeparam name="TCollection">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемых элементов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Более чем <see cref="F:System.Int32.MaxValue" /> элементов перечисляются запросом.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
      <summary>Проецирует параллельно каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> и объединяет результирующие последовательности в одну последовательность.Индекс каждого элемента исходной последовательности используется в проецированной форме этого элемента.</summary>
      <returns>Последовательность, элементы которой получены в результате вызова функции преобразования "один ко многим" для каждого элемента входной последовательности.</returns>
      <param name="source">Последовательность значений, которые следует проецировать.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TResult">Тип элементов последовательности, возвращаемой селектором.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Более чем <see cref="F:System.Int32.MaxValue" /> элементов перечисляются запросом.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>Эту перегрузку SequenceEqual вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="first">Этот параметр не используется.</param>
      <param name="second">Этот параметр не используется.</param>
      <typeparam name="TSource">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.NotSupportedException">Создается при каждом вызове этого метода.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Эту перегрузку SequenceEqual вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="first">Этот параметр не используется.</param>
      <param name="second">Этот параметр не используется.</param>
      <param name="comparer">Этот параметр не используется.</param>
      <typeparam name="TSource">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.NotSupportedException">Создается при каждом вызове этого метода.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>Определяет, совпадают ли две параллельные последовательности, используя для сравнения элементов компаратор проверки на равенство по умолчанию, предназначенный для их типа.</summary>
      <returns>Значение true, если у двух исходных последовательностей одинаковая длина и соответствующие элементы совпадают согласно компаратору проверки на равенство по умолчанию для этого типа элементов; в противном случае — значение false.</returns>
      <param name="first">Последовательность для сравнения со второй последовательностью.</param>
      <param name="second">Последовательность, сравниваемая с первой входной последовательностью.</param>
      <typeparam name="TSource">Тип элементов входных последовательностей.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> или <paramref name="second" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Определяет, совпадают ли две параллельные последовательности, используя для сравнения элементов указанный компаратор проверки на равенство IEqualityComparer{T}.</summary>
      <returns>Значение true, если у двух исходных последовательностей одинаковая длина и соответствующие элементы совпадают согласно компаратору проверки на равенство по умолчанию для этого типа элементов; в противном случае — значение false.</returns>
      <param name="first">Последовательность, сравниваемая с последовательностью <paramref name="second" />.</param>
      <param name="second">Последовательность, сравниваемая с первой входной последовательностью.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения элементов.</param>
      <typeparam name="TSource">Тип элементов входных последовательностей.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> или <paramref name="second" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
      <summary>Возвращает единственный элемент параллельной последовательности и генерирует исключение, если число элементов последовательности отлично от 1.</summary>
      <returns>Единственный элемент входной последовательности.</returns>
      <param name="source">Последовательность, из которой требуется возвратить единственный элемент.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Входная последовательность содержит более одного элемента.-или- Входная последовательность пуста.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Возвращает единственный элемент параллельной последовательности, удовлетворяющий заданному условию, и генерирует исключение, если таких элементов больше одного.</summary>
      <returns>Единственный элемент входной последовательности, удовлетворяющий условию.</returns>
      <param name="source">Последовательность, из которой требуется возвратить единственный элемент.</param>
      <param name="predicate">Функция для проверки элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Ни один элемент не удовлетворяет условию предиката <paramref name="predicate" />.-или- Условию предиката <paramref name="predicate" /> удовлетворяет более одного элемента.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary>Возвращает единственный элемент параллельной последовательности или значение по умолчанию, если последовательность пуста; если в последовательности более одного элемента, создается исключение.</summary>
      <returns>Единственный элемент входной последовательности или default(), если в последовательности нет элементов.</returns>
      <param name="source">Последовательность, из которой требуется возвратить единственный элемент.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Возвращает единственный элемент параллельной последовательности, удовлетворяющий заданному условию, или значение по умолчанию, если такого элемента не существует; если условию удовлетворяет более одного элемента, создается исключение.</summary>
      <returns>Единственный элемент входной последовательности, удовлетворяющий условию, или default(), если такой элемент не найден.</returns>
      <param name="source">Последовательность, из которой требуется возвратить единственный элемент.</param>
      <param name="predicate">Функция для проверки элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="source" /> пуст или возвращается несколько элементов.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>Пропускает заданное число элементов в параллельной последовательности и возвращает остальные элементы.</summary>
      <returns>Последовательность, содержащая элементы из входной последовательности, начиная с указанного индекса.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элементы.</param>
      <param name="count">Число элементов, пропускаемых перед возвращением остальных элементов.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Счетчик больше, чем <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Пропускает элементы в параллельной последовательности, пока они удовлетворяют заданному условию, и затем возвращает оставшиеся элементы.</summary>
      <returns>Последовательность, содержащая цепочку элементов входной последовательности, начиная с первого элемента, который не прошел проверку, заданную предикатом.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элементы.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary>Пропускает элементы в параллельной последовательности, пока они удовлетворяют заданному условию, и затем возвращает оставшиеся элементы.Индекс элемента используется в логике функции предиката.</summary>
      <returns>Последовательность, содержащая цепочку элементов входной последовательности, начиная с первого элемента, который не прошел проверку, заданную предикатом.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элементы.</param>
      <param name="predicate">Функция, применяемая к каждому исходному элементу для проверки условия; второй параметр функции представляет индекс исходного элемента. </param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Более чем <see cref="F:System.Int32.MaxValue" /> элементов перечисляются запросом.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
      <summary>Параллельно вычисляет сумму для последовательности значений.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Decimal.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
      <summary>Параллельно вычисляет сумму для последовательности значений.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Double.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
      <summary>Параллельно вычисляет сумму для последовательности значений.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Int32.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
      <summary>Параллельно вычисляет сумму для последовательности значений.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Int64.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary>Параллельно вычисляет сумму для последовательности значений.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Decimal.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary>Параллельно вычисляет сумму для последовательности значений.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Double.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary>Параллельно вычисляет сумму для последовательности значений.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Int32.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary>Параллельно вычисляет сумму для последовательности значений.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Int64.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary>Параллельно вычисляет сумму для последовательности значений.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Single.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
      <summary>Параллельно вычисляет сумму для последовательности значений.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Single.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary>Параллельно вычисляет сумму для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Decimal.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary>Параллельно вычисляет сумму для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Double.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary>Параллельно вычисляет сумму для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов исходной последовательности.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Int32.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary>Параллельно вычисляет сумму для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Int64.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>Параллельно вычисляет сумму для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Decimal.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>Параллельно вычисляет сумму для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Double.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>Параллельно вычисляет сумму для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Int32.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>Параллельно вычисляет сумму для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Int64.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>Параллельно вычисляет сумму для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Single.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary>Параллельно вычисляет сумму для последовательности значений, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.</summary>
      <returns>Сумма проецированных значений последовательности.</returns>
      <param name="source">Последовательность значений, сумму которых требуется вычислить.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="selector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Сумма больше значения <see cref="F:System.Single.MaxValue" />.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>Возвращает указанное число идущих подряд элементов с начала параллельной последовательности.</summary>
      <returns>Последовательность, содержащая заданное число элементов с начала входной последовательности.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элементы.</param>
      <param name="count">Число возвращаемых элементов.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Возвращает цепочку элементов параллельной последовательности, удовлетворяющих указанному условию.</summary>
      <returns>Последовательность, содержащая элементы входной последовательности до первого элемента, который не прошел проверку.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элементы.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary>Возвращает цепочку элементов параллельной последовательности, удовлетворяющих указанному условию.Индекс элемента используется в логике функции предиката.</summary>
      <returns>Последовательность, содержащая элементы входной последовательности до первого элемента, который не прошел проверку.</returns>
      <param name="source">Последовательность, из которой требуется возвратить элементы.</param>
      <param name="predicate">Функция, применяемая к каждому исходному элементу для проверки условия; второй параметр функции представляет индекс исходного элемента. </param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Более <see cref="F:System.Int32.MaxValue" /> элементов перечисляются этим запросом.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary>Параллельно выполняет дополнительное упорядочение элементов последовательности в порядке возрастания ключа.</summary>
      <returns>Объект OrderedParallelQuery{TSource}, элементы которого отсортированы по ключу.</returns>
      <param name="source">Объект OrderedParallelQuery{TSource}, который содержит элементы для сортировки.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Параллельно выполняет дополнительное упорядочение элементов последовательности в порядке возрастания с использованием указанного компаратора.</summary>
      <returns>Объект OrderedParallelQuery{TSource}, элементы которого отсортированы по ключу.</returns>
      <param name="source">Объект OrderedParallelQuery{TSource}, который содержит элементы для сортировки.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer">Компаратор IComparer{TKey}, используемый для сравнения ключей.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary>Параллельно выполняет дополнительное упорядочение элементов последовательности в порядке убывания ключа.</summary>
      <returns>Последовательность, элементы которой сортируются по ключу в порядке убывания.</returns>
      <param name="source">Объект OrderedParallelQuery{TSource}, который содержит элементы для сортировки.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Параллельно выполняет дополнительное упорядочение элементов последовательности в порядке убывания с использованием указанного компаратора.</summary>
      <returns>Последовательность, элементы которой сортируются по ключу в порядке убывания.</returns>
      <param name="source">Объект OrderedParallelQuery{TSource}, который содержит элементы для сортировки.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer">Компаратор IComparer{TKey}, используемый для сравнения ключей.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
      <summary>Создает массив из объекта <see cref="T:System.Linq.ParallelQuery`1" />.</summary>
      <returns>Массив, содержащий элементы из входной последовательности.</returns>
      <param name="source">Последовательность, из которой создается массив.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Создает объект <see cref="T:System.Collections.Generic.Dictionary`2" /> из коллекции <see cref="T:System.Linq.ParallelQuery`1" /> в соответствии с заданной функцией выбора ключа.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.Dictionary`2" />, содержащий ключи и значения.</returns>
      <param name="source">Последовательность, из которой создается объект <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Функция, извлекающая ключ из каждого элемента.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">
        <paramref name="keySelector" /> создает ключ, который представляет собой пустую ссылку (Nothing в Visual Basic).-или- Функция <paramref name="keySelector" /> выдает дубликаты ключей для двух элементов.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Создает объект <see cref="T:System.Collections.Generic.Dictionary`2" /> из коллекции <see cref="T:System.Linq.ParallelQuery`1" /> в соответствии с заданной функцией выбора ключа и компаратором ключей.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.Dictionary`2" />, содержащий ключи и значения.</returns>
      <param name="source">Последовательность, из которой создается объект <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Функция, извлекающая ключ из каждого элемента.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">
        <paramref name="keySelector" /> создает ключ, который представляет собой пустую ссылку (Nothing в Visual Basic).-или- Функция <paramref name="keySelector" /> выдает дубликаты ключей для двух элементов.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>Создает объект <see cref="T:System.Collections.Generic.Dictionary`2" /> из объекта <see cref="T:System.Linq.ParallelQuery`1" /> в соответствии с заданными функциями выбора ключа и выбора элемента.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.Dictionary`2" />, который содержит значения типа <paramref name="TElement" />, выбранные из входной последовательности</returns>
      <param name="source">Последовательность, из которой создается объект <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Функция, извлекающая ключ из каждого элемента.</param>
      <param name="elementSelector">Функция преобразования для получения результирующего значения каждого элемента. </param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">Тип значения, возвращаемого функцией <paramref name="elementSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> или <paramref name="elementSelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">
        <paramref name="keySelector" /> создает ключ, который представляет собой пустую ссылку (Nothing в Visual Basic).-или- Функция <paramref name="keySelector" /> выдает дубликаты ключей для двух элементов.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Создает объект <see cref="T:System.Collections.Generic.Dictionary`2" /> из объекта <see cref="T:System.Linq.ParallelQuery`1" /> в соответствии с заданным компаратором и функциями выбора ключа и выбора элемента.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.Dictionary`2" />, который содержит значения типа <paramref name="TElement" />, выбранные из входной последовательности</returns>
      <param name="source">Последовательность, из которой создается объект <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Функция, извлекающая ключ из каждого элемента.</param>
      <param name="elementSelector">Функция преобразования для получения результирующего значения каждого элемента.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">Тип значения, возвращаемого функцией <paramref name="elementSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> или <paramref name="elementSelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">
        <paramref name="keySelector" /> создает ключ, который представляет собой пустую ссылку (Nothing в Visual Basic).-или- Функция <paramref name="keySelector" /> выдает дубликаты ключей для двух элементов.-или- Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
      <summary>Создает словарь <see cref="T:System.Collections.Generic.List`1" /> из объекта <see cref="T:System.Linq.ParallelQuery`1" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.List`1" />, содержащий элементы из входной последовательности.</returns>
      <param name="source">Последовательность, из которой создается объект <see cref="T:System.Collections.Generic.List`1" />.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>Создает объект <see cref="T:System.Linq.ILookup`2" /> из объекта <see cref="T:System.Linq.ParallelQuery`1" /> в соответствии с заданной функцией выбора ключа.</summary>
      <returns>Объект <see cref="T:System.Linq.ILookup`2" />, содержащий ключи и значения.</returns>
      <param name="source">Последовательность, из которой создается объект <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector">Функция, извлекающая ключ из каждого элемента.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Создает объект <see cref="T:System.Linq.ILookup`2" /> из объекта <see cref="T:System.Linq.ParallelQuery`1" /> в соответствии с заданной функцией выбора ключа и компаратором ключей.</summary>
      <returns>Объект <see cref="T:System.Linq.ILookup`2" />, содержащий ключи и значения.</returns>
      <param name="source">Последовательность, из которой создается объект <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector">Функция, извлекающая ключ из каждого элемента.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>Создает объект <see cref="T:System.Linq.ILookup`2" /> из объекта <see cref="T:System.Linq.ParallelQuery`1" /> в соответствии с заданными функциями выбора ключа и выбора элемента.</summary>
      <returns>Объект <see cref="T:System.Linq.ILookup`2" />, содержащий элементы входной последовательности типа <paramref name="TElement" />.</returns>
      <param name="source">Последовательность, из которой создается объект <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector">Функция, извлекающая ключ из каждого элемента.</param>
      <param name="elementSelector">Функция преобразования для получения результирующего значения каждого элемента. </param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">Тип значения, возвращаемого функцией <paramref name="elementSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> или <paramref name="elementSelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Создает объект <see cref="T:System.Linq.ILookup`2" /> из объекта <see cref="T:System.Linq.ParallelQuery`1" /> в соответствии с заданным компаратором и функциями выбора ключа и выбора элемента.</summary>
      <returns>Словарь поиска Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;), содержащий значения типа TElement, выбранные из входной последовательности.</returns>
      <param name="source">Последовательность, из которой создается объект <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector">Функция, извлекающая ключ из каждого элемента.</param>
      <param name="elementSelector">Функция преобразования для получения результирующего значения каждого элемента. </param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">Тип значения, возвращаемого функцией <paramref name="elementSelector" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="keySelector" /> или <paramref name="elementSelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>Эту перегрузку Union вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="first">Этот параметр не используется.</param>
      <param name="second">Этот параметр не используется.</param>
      <typeparam name="TSource">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.NotSupportedException">Исключение, которое возникает при вызове этого метода.</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Эту перегрузку Union вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="first">Этот параметр не используется.</param>
      <param name="second">Этот параметр не используется.</param>
      <param name="comparer">Этот параметр не используется.</param>
      <typeparam name="TSource">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.NotSupportedException">Исключение, которое возникает при вызове этого метода.</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>Находит объединение множеств, представленных двумя параллельными последовательностями, используя компаратор проверки на равенство по умолчанию.</summary>
      <returns>Последовательность, которая содержит элементы, имеющиеся в обеих входных последовательностях, кроме дубликатов.</returns>
      <param name="first">Последовательность, различающиеся элементы которой образуют первое множество для объединения.</param>
      <param name="second">Последовательность, различающиеся элементы которой образуют второе множество для объединения.</param>
      <typeparam name="TSource">Тип элементов входных последовательностей.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> или <paramref name="second" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Находит объединение множеств, представленных двумя параллельными последовательностями, используя указанный компаратор IEqualityComparer{T}.</summary>
      <returns>Последовательность, которая содержит элементы, имеющиеся в обеих входных последовательностях, кроме дубликатов.</returns>
      <param name="first">Последовательность, различающиеся элементы которой образуют первое множество для объединения.</param>
      <param name="second">Последовательность, различающиеся элементы которой образуют второе множество для объединения.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.</param>
      <typeparam name="TSource">Тип элементов входных последовательностей.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> или <paramref name="second" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>Выполняет параллельную фильтрацию последовательности значений на основе предиката.</summary>
      <returns>Последовательность, содержащая элементы входной последовательности, которые удовлетворяют условию.</returns>
      <param name="source">Последовательность для фильтрации.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов исходной последовательности.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary>Выполняет параллельную фильтрацию последовательности значений на основе предиката.Индекс каждого элемента используется в логике функции предиката.</summary>
      <returns>Последовательность, содержащая элементы входной последовательности, которые удовлетворяют условию.</returns>
      <param name="source">Последовательность для фильтрации.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TSource">Тип элементов исходной последовательности.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> или <paramref name="predicate" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException">Более чем <see cref="F:System.Int32.MaxValue" /> элементов перечисляются запросом.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
      <summary>Задает объект <see cref="T:System.Threading.CancellationToken" /> для связи с запросом.</summary>
      <returns>Объект ParallelQuery, представляющий такой же запрос, как исходный, но с зарегистрированным токеном отмены.</returns>
      <param name="source">Объект ParallelQuery, свойство которого нужно установить.</param>
      <param name="cancellationToken">Токен отмены.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Threading.CancellationTokenSource" />, связанный с <paramref name="cancellationToken" />, был удален.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="WithCancellation" /> используется в запросе несколько раз.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>Задает степень параллельности для использования в запросе.Степень параллельности — это максимальное число задач, выполняемых одновременно для обработки запроса.</summary>
      <returns>Объект ParallelQuery, представляющий такой же запрос, как исходный, с установленным пределом степени параллельности.</returns>
      <param name="source">Объект ParallelQuery, для которого нужно установить предел степени параллельности.</param>
      <param name="degreeOfParallelism">Степень параллельности для запроса.Значение по умолчанию — Math.Min (<see cref="P:System.Environment.ProcessorCount" />, MAX_SUPPORTED_DOP) где MAX_SUPPORTED_DOP — 512.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="degreeOfParallelism" /> меньше 1 или больше 511. </exception>
      <exception cref="T:System.InvalidOperationException">WithDegreeOfParallelism используется в запросе несколько раз.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
      <summary>Задает режим выполнения запроса.</summary>
      <returns>Объект ParallelQuery, представляющий такой же запрос, как исходный, но с зарегистрированным режимом выполнения.</returns>
      <param name="source">Объект ParallelQuery, свойство которого нужно установить.</param>
      <param name="executionMode">Режим, в котором следует выполнять запрос.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="executionMode" /> не является допустимым значением <see cref="T:System.Linq.ParallelExecutionMode" />.</exception>
      <exception cref="T:System.InvalidOperationException">WithExecutionMode используется в запросе несколько раз.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
      <summary>Задает параметры слияния для запроса, определяющие способ буферизации выходных данных запросом.</summary>
      <returns>Объект ParallelQuery, представляющий такой же запрос, как исходный, но с зарегистрированными параметрами слияния.</returns>
      <param name="source">Объект ParallelQuery, свойство которого нужно установить.</param>
      <param name="mergeOptions">Параметры слияния, устанавливаемые для данного запроса.</param>
      <typeparam name="TSource">Тип элементов последовательности <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="mergeOptions" /> не является допустимым значением <see cref="T:System.Linq.ParallelMergeOptions" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="WithMergeOptions" /> используется в запросе несколько раз.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
      <summary>Эту перегрузку Zip вызывать не следует.Данный метод помечен как устаревший, при попытке его вызова всегда создается исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Данная перегрузка всегда создает исключение <see cref="T:System.NotSupportedException" />.</returns>
      <param name="first">Этот параметр не используется.</param>
      <param name="second">Этот параметр не используется.</param>
      <param name="resultSelector">Этот параметр не используется.</param>
      <typeparam name="TFirst">Этот параметр типа не используется.</typeparam>
      <typeparam name="TSecond">Этот параметр типа не используется.</typeparam>
      <typeparam name="TResult">Этот параметр типа не используется.</typeparam>
      <exception cref="T:System.NotSupportedException">Исключение, которое возникает при вызове этого метода.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
      <summary>Параллельно объединяет две последовательности, используя указанную функцию предиката.</summary>
      <returns>Последовательность, которая содержит элементы типа <paramref name="TResult" />, полученные в результате попарного выполнения функции <paramref name="resultSelector" /> для двух последовательностей.Если длины последовательностей различаются, длина ограничивается более короткой последовательностью.</returns>
      <param name="first">Первая последовательность для сворачивания.</param>
      <param name="second">Вторая последовательность для сворачивания.</param>
      <param name="resultSelector">Функция для создания результирующего элемента для пары соответствующих элементов.</param>
      <typeparam name="TFirst">Тип элементов первой последовательности.</typeparam>
      <typeparam name="TSecond">Тип элементов второй последовательности.</typeparam>
      <typeparam name="TResult">Тип возвращаемых элементов.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> или <paramref name="second" /> или <paramref name="resultSelector" /> является пустой ссылкой (Nothing в Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException">Запрос был отменен, а токен был передан через <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException">Одно или несколько исключений возникло во время оценки запроса.</exception>
    </member>
    <member name="T:System.Linq.ParallelExecutionMode">
      <summary>Режим выполнения запроса дает системе информацию, как обрабатывать компромиссные ситуации в отношении производительности при осуществлении параллельных запросов.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.Default">
      <summary>Этот флажок установлен по умолчанию.PLINQ изучит структуру запроса и выполнит его параллелизацию, только если это может привести к ускорению работы.Если структура запроса указывает на отсутствие возможности достижения ускорения, PLINQ выполнит данный запрос как обычный запрос LINQ to Objects.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.ForceParallelism">
      <summary>Выполнять весь запрос параллельно, даже если для этого понадобится использовать алгоритмы, требующие много ресурсов.Этот флаг используется в тех случаях, когда известно, что параллельное выполнение запроса приведет к ускорению, однако в режиме по умолчанию PLINQ этот запрос будет выполнен как последовательный.</summary>
    </member>
    <member name="T:System.Linq.ParallelMergeOptions">
      <summary>Указывает предпочтительный тип слияния вывода для использования в запросе.Другими словами, этот класс определяет, как PLINQ должен объединять результаты, полученных из различных секций, в единую результирующую последовательность.Это только рекомендация, которая может не соблюдаться системой при выполнении всех запросов параллельно.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.AutoBuffered">
      <summary>Для слияния используются буферы вывода, размер которых определяется системой.Результаты накапливаются в буфере вывода, прежде чем попасть к потребителю запроса.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.Default">
      <summary>Используется тип слияния по умолчанию, то есть AutoBuffered.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.FullyBuffered">
      <summary>Используется режим слияния с полными буферами вывода.Система будет накапливать все результаты до их передачи потребителю запроса.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.NotBuffered">
      <summary>Используется режим слияния без буферов вывода.Элементы результатов передаются потребителю запроса сразу же после вычисления.</summary>
    </member>
    <member name="T:System.Linq.ParallelQuery">
      <summary>Представляет параллельную последовательность.</summary>
    </member>
    <member name="M:System.Linq.ParallelQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий перебор элементов последовательности.</summary>
      <returns>Перечислитель, выполняющий перебор элементов последовательности.</returns>
    </member>
    <member name="T:System.Linq.ParallelQuery`1">
      <summary>Представляет параллельную последовательность.</summary>
      <typeparam name="TSource">Тип элемента исходной последовательности.</typeparam>
    </member>
    <member name="M:System.Linq.ParallelQuery`1.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий перебор элементов последовательности.</summary>
      <returns>Перечислитель, выполняющий перебор элементов последовательности.</returns>
    </member>
  </members>
</doc>