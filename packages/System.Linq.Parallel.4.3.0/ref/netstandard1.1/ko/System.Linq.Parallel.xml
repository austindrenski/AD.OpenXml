<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Linq.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Linq.OrderedParallelQuery`1">
      <summary>정렬된 병렬 시퀀스를 나타냅니다.</summary>
      <typeparam name="TSource">소스 컬렉션의 요소 형식입니다.</typeparam>
    </member>
    <member name="M:System.Linq.OrderedParallelQuery`1.GetEnumerator">
      <summary>시퀀스를 반복하는 열거자를 반환합니다.</summary>
      <returns>시퀀스를 반복하는 열거자입니다.</returns>
    </member>
    <member name="T:System.Linq.ParallelEnumerable">
      <summary>ParallelQuery{TSource}를 구현하는 개체를 쿼리하기 위한 메서드 집합을 제공합니다.<see cref="T:System.Linq.Enumerable" />과 같습니다.</summary>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary>시퀀스에 대해 누적기 함수를 병렬로 적용합니다.이 오버로드는 순차적 구현에서는 사용할 수 없습니다.</summary>
      <returns>변환된 최종 누적기 값입니다.</returns>
      <param name="source">집계할 시퀀스입니다.</param>
      <param name="seedFactory">초기 누적기 값을 반환하는 함수입니다. </param>
      <param name="updateAccumulatorFunc">파티션의 각 요소에 대해 호출할 누적기 함수입니다. </param>
      <param name="combineAccumulatorsFunc">각 파티션의 생성된 누적기 결과에 대해 호출할 누적기 함수입니다.</param>
      <param name="resultSelector">최종 누적기 값을 결과 값으로 변환하는 함수입니다. </param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TAccumulate">누적기 값의 형식입니다.</typeparam>
      <typeparam name="TResult">결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="seedFactory" /> 또는 <paramref name="updateAccumulatorFunc" /> 또는 <paramref name="combineAccumulatorsFunc" /> 또는 <paramref name="resultSelector" />가 null 참조인 경우(Visual Basic에서는 Nothing).</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
      <summary>시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</summary>
      <returns>최종 누적기 값입니다.</returns>
      <param name="source">집계할 시퀀스입니다.</param>
      <param name="func">각 요소에 대해 호출할 누적기 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="func" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
      <summary>시퀀스에 대해 누적기 함수를 병렬로 적용합니다.지정된 시드 값은 초기 누적기 값으로 사용됩니다.</summary>
      <returns>최종 누적기 값입니다.</returns>
      <param name="source">집계할 시퀀스입니다.</param>
      <param name="seed">초기 누적기 값입니다.</param>
      <param name="func">각 요소에 대해 호출할 누적기 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TAccumulate">누적기 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="func" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <summary>시퀀스에 대해 누적기 함수를 병렬로 적용합니다.지정된 시드 값은 초기 누적기 값으로 사용되고 지정된 함수는 결과 값을 선택하는 데 사용됩니다.</summary>
      <returns>변환된 최종 누적기 값입니다.</returns>
      <param name="source">집계할 시퀀스입니다.</param>
      <param name="seed">초기 누적기 값입니다.</param>
      <param name="func">각 요소에 대해 호출할 누적기 함수입니다.</param>
      <param name="resultSelector">최종 누적기 값을 결과 값으로 변환하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TAccumulate">누적기 값의 형식입니다.</typeparam>
      <typeparam name="TResult">결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="func" /> 또는 <paramref name="resultSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary>시퀀스에 대해 누적기 함수를 병렬로 적용합니다.이 오버로드는 순차적 구현에서는 사용할 수 없습니다.</summary>
      <returns>변환된 최종 누적기 값입니다.</returns>
      <param name="source">집계할 시퀀스입니다.</param>
      <param name="seed">초기 누적기 값입니다.</param>
      <param name="updateAccumulatorFunc">파티션의 각 요소에 대해 호출할 누적기 함수입니다. </param>
      <param name="combineAccumulatorsFunc">각 파티션의 생성된 누적기 결과에 대해 호출할 누적기 함수입니다. </param>
      <param name="resultSelector">최종 누적기 값을 결과 값으로 변환하는 함수입니다. </param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TAccumulate">누적기 값의 형식입니다.</typeparam>
      <typeparam name="TResult">결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="updateAccumulatorFunc" /> 또는 <paramref name="combineAccumulatorsFunc" /> 또는 <paramref name="resultSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>시퀀스의 모든 요소가 특정 조건에 맞는지 병렬로 확인합니다.</summary>
      <returns>소스 시퀀스의 모든 요소가 지정된 조건자의 테스트를 통과하거나 시퀀스가 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="source">요소에 조건자를 적용할 시퀀스입니다.</param>
      <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
      <summary>병렬 시퀀스에 요소가 하나라도 있는지 확인합니다.</summary>
      <returns>소스 시퀀스에 요소가 하나라도 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="source">비어 있는지 확인할 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>시퀀스의 요소가 특정 조건에 맞는지 병렬로 확인합니다.</summary>
      <returns>소스 시퀀스의 요소가 하나라도 지정된 조건자의 테스트를 통과하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="source">해당 요소에 조건자를 적용할 시퀀스입니다.</param>
      <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
      <summary>
        <see cref="T:System.Linq.ParallelQuery`1" />를 <see cref="T:System.Collections.Generic.IEnumerable`1" />로 변환하여 쿼리에 대한 순차적 확인을 강제합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />로 형식화된 입력 시퀀스입니다.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />로 캐스팅할 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
      <summary>순서가 없는 기본값을 무시하고 순서가 지정된 것처럼 데이터 소스를 취급하도록 합니다.AsOrdered는 AsParallel, ParallelEnumerable.Range 및 ParallelEnumerable.Repeat에 의해 반환된 제네릭이 아닌 시퀀스에 대해서만 호출할 수 있습니다.</summary>
      <returns>후속 쿼리 연산자에서 원래 순서를 유지하는 소스 시퀀스입니다.</returns>
      <param name="source">입력 시퀀스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우 throw됩니다.또는쿼리하는 동안 AsOrdered가 호출될 경우<see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> 또는 <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" /> 직후 호출할 수 있습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
      <summary>순서가 없는 기본값을 무시하고 순서가 지정된 것처럼 데이터 소스를 취급하도록 합니다.AsOrdered는 AsParallel, ParallelEnumerable.Range 및 ParallelEnumerable.Repeat에 의해 반환된 제네릭 시퀀스에 대해서만 호출할 수 있습니다.</summary>
      <returns>후속 쿼리 연산자에서 원래 순서를 유지하는 소스 시퀀스입니다.</returns>
      <param name="source">입력 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우 throw됩니다.또는<paramref name="source" />가 AsParallel, ParallelEnumerable.Range 또는 ParallelEnumerable.Repeat 중 하나가 아닌 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
      <summary>입력 시퀀스를 파티션으로 분할해야 하는 사용자 지정 파티셔너에 의해 발생한 쿼리를 병렬화할 수 있도록 합니다.</summary>
      <returns>ParallelEnumerable 확장 메서드에 바인딩할 <paramref name="source" /> ParallelQuery입니다.</returns>
      <param name="source">입력 시퀀스에 대한 파티셔너입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>쿼리를 병렬화할 수 있도록 합니다.</summary>
      <returns>ParallelEnumerable 확장 메서드에 바인딩할 소스 <see cref="T:System.Linq.ParallelQuery`1" />입니다.</returns>
      <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert to a <see cref="T:System.Linq.ParallelQuery`1" />.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
      <summary>쿼리를 병렬화할 수 있도록 합니다.</summary>
      <returns>ParallelEnumerable 확장 메서드에 바인딩할 소스 ParallelQuery입니다.</returns>
      <param name="source">
        <see cref="T:System.Linq.ParallelQuery" />로 변환할 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
      <summary>
        <see cref="T:System.Linq.ParallelQuery`1" />를 <see cref="T:System.Collections.Generic.IEnumerable`1" />로 변환하여 쿼리에 대한 순차적 확인을 강제합니다.</summary>
      <returns>순차적 확장 메서드에 바인딩할 소스 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />로 변환할 <see cref="T:System.Linq.ParallelQuery`1" />입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
      <summary>요소 사이에 순서가 암시되지 않은 것처럼 중간 쿼리를 취급하도록 합니다.</summary>
      <returns>임의의 순서가 있는 소스 시퀀스입니다.</returns>
      <param name="source">입력 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
      <summary>값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
      <summary>값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
      <summary>값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
      <summary>값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary>값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary>값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균을 반환합니다.</returns>
      <param name="source">소스 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">평균을 계산하는 데 사용되는 값의 시퀀스입니다. 값의 시퀀스의 평균입니다. <paramref name="source" />는 null 참조(Visual Basic의 Nothing) 입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary>값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary>값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary>값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
      <summary>값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).<paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).<paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).<paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).<paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).<paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).<paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).<paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).<paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).<paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <returns>값 시퀀스의 평균입니다.</returns>
      <param name="source">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).<paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
      <summary>ParallelQuery의 요소를 지정된 형식으로 변환합니다.</summary>
      <returns>지정된 형식으로 변환되는 소스 시퀀스의 각 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="source">변환될 요소가 들어 있는 시퀀스입니다.</param>
      <typeparam name="TResult">
        <paramref name="source" />의 요소를 변환할 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.InvalidCastException">소스 시퀀스의 형식은 <paramref name="TResult" />로 변환할 수 없습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>이 Concat 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="first">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>두 병렬 시퀀스를 연결합니다.</summary>
      <returns>두 입력 시퀀스의 연결된 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="first">연결할 첫 번째 시퀀스입니다.</param>
      <param name="second">첫 번째 시퀀스에 연결할 시퀀스입니다.</param>
      <typeparam name="TSource">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
      <summary>기본 같음 비교자를 사용하여 시퀀스에 지정된 요소가 들어 있는지 병렬로 확인합니다.</summary>
      <returns>소스 시퀀스에 지정된 값을 갖는 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="source">값을 찾을 시퀀스입니다.</param>
      <param name="value">시퀀스에서 찾을 값입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary>지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />를 사용하여 시퀀스에 지정된 요소가 들어 있는지 여부를 병렬로 확인합니다.</summary>
      <returns>소스 시퀀스에 지정된 값을 갖는 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="source">값을 찾을 시퀀스입니다.</param>
      <param name="value">시퀀스에서 찾을 값입니다.</param>
      <param name="comparer">값을 비교할 같음 비교자입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
      <summary>병렬 시퀀스의 요소 수를 반환합니다.</summary>
      <returns>입력 시퀀스의 요소 수입니다.</returns>
      <param name="source">개수를 셀 요소가 들어 있는 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">소스의 요소 수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우.(이 경우 InnerException은 <see cref="T:System.OverflowException" />입니다) - 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>지정된 병렬 시퀀스에서 특정 조건에 맞는 요소 수를 나타내는 숫자를 반환합니다.</summary>
      <returns>시퀀스에서 조건자 함수의 조건에 맞는 요소 수를 나타내는 숫자입니다.</returns>
      <param name="source">개수를 셀 요소가 들어 있는 시퀀스입니다.</param>
      <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">소스의 요소 수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우.(이 경우 InnerException은 <see cref="T:System.OverflowException" />입니다) - 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
      <summary>지정된 병렬 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 singleton 컬렉션의 형식 매개 변수 기본값을 반환합니다.</summary>
      <returns>
        <paramref name="source" />가 비어 있으면 default(TSource)가 들어 있는 시퀀스이고, 그렇지 않으면 <paramref name="source" />입니다.</returns>
      <param name="source">비어 있는 경우 기본값을 반환할 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
      <summary>지정된 병렬 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 singleton 컬렉션의 지정된 값을 반환합니다.</summary>
      <returns>
        <paramref name="source" />가 비어 있으면 defaultValue가 들어 있는 시퀀스이고, 그렇지 않으면 <paramref name="source" />입니다.</returns>
      <param name="source">비어 있는 경우 지정된 값을 반환할 시퀀스입니다.</param>
      <param name="defaultValue">시퀀스가 비어 있는 경우에 반환할 값입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
      <summary>기본 같음 비교자로 값을 비교하여 병렬 시퀀스에서 고유 요소를 반환합니다.</summary>
      <returns>소스 시퀀스의 고유 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="source">중복 요소를 제거할 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />로 값을 비교하여 병렬 시퀀스에서 고유 요소를 반환합니다.</summary>
      <returns>소스 시퀀스의 고유 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="source">중복 요소를 제거할 시퀀스입니다.</param>
      <param name="comparer">값을 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>병렬 시퀀스에서 지정된 인덱스의 요소를 반환합니다.</summary>
      <returns>소스 시퀀스에서 지정된 위치의 요소입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <param name="index">검색할 요소의 0부터 시작하는 인덱스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작거나 <paramref name="source" />의 요소 수보다 크거나 같은 경우</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>병렬 시퀀스에서 지정된 인덱스의 요소를 반환하거나, 인덱스가 범위를 벗어나면 기본값을 반환합니다.</summary>
      <returns>인덱스가 소스 시퀀스의 범위를 벗어나면 default(TSource)이고, 그렇지 않으면 소스 시퀀스에서 지정된 위치에 있는 요소입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <param name="index">검색할 요소의 0부터 시작하는 인덱스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Empty``1">
      <summary>지정된 형식 인수를 갖는 빈 ParallelQuery{TResult}를 반환합니다.</summary>
      <returns>해당 형식 인수가 <paramref name="TResult" />인 빈 시퀀스입니다.</returns>
      <typeparam name="TResult">반환되는 제네릭 시퀀스의 형식 매개 변수에 할당할 형식입니다.</typeparam>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>이 Except 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="first">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>이 Except 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="first">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second">이 매개 변수는 사용되지 않습니다.</param>
      <param name="comparer">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>기본 같음 비교자로 값을 비교하여 두 병렬 시퀀스의 차집합을 구합니다.</summary>
      <returns>두 시퀀스 요소의 차집합이 들어 있는 시퀀스입니다.</returns>
      <param name="first">
        <paramref name="second" />에 없는 요소를 반환할 시퀀스입니다.</param>
      <param name="second">첫 번째 시퀀스에 요소가 있는 경우 반환되는 시퀀스에서 해당 요소를 제거할 시퀀스입니다.</param>
      <typeparam name="TSource">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />로 값을 비교하여 두 병렬 시퀀스의 차집합을 구합니다.</summary>
      <returns>두 시퀀스 요소의 차집합이 들어 있는 시퀀스입니다.</returns>
      <param name="first">
        <paramref name="second" />에 없는 요소를 반환할 시퀀스입니다.</param>
      <param name="second">첫 번째 시퀀스에 요소가 있는 경우 반환되는 시퀀스에서 해당 요소를 제거할 시퀀스입니다. </param>
      <param name="comparer">값을 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
      <summary>병렬 시퀀스의 첫 번째 요소를 반환합니다.</summary>
      <returns>지정된 시퀀스의 첫 번째 요소입니다.</returns>
      <param name="source">첫 번째 요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>병렬 시퀀스에서 지정된 조건에 맞는 첫 번째 요소를 반환합니다.</summary>
      <returns>시퀀스에서 지정된 조건자 함수의 테스트를 통과하는 첫 번째 요소입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="predicate" />의 조건에 맞는 <paramref name="source" /> 요소가 없는 경우.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary>병렬 시퀀스의 첫 번째 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</summary>
      <returns>
        <paramref name="source" />가 비어 있으면 default(TSource)이고, 그렇지 않으면 <paramref name="source" />의 첫 번째 요소입니다.</returns>
      <param name="source">첫 번째 요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>병렬 시퀀스에서 특정 조건에 맞는 첫 번째 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</summary>
      <returns>
        <paramref name="source" />가 비어 있거나 조건자에 지정된 테스트를 통과하는 요소가 없으면 default(TSource)이고, 그렇지 않으면 <paramref name="source" />에서 조건자에 지정된 테스트를 통과하는 첫 번째 요소입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
      <summary>
        <paramref name="source" />의 각 요소에 대해 지정된 동작을 병렬로 수행합니다.</summary>
      <param name="source">요소가 <paramref name="action" />에서 처리될 <see cref="T:System.Linq.ParallelQuery`1" />입니다.</param>
      <param name="action">각 요소에 대해 호출할 동작입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화합니다.</summary>
      <returns>
        <paramref name="TKey" />에 따라 내림차순으로 정렬된 그룹 시퀀스입니다.</returns>
      <param name="source">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</param>
      <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>지정된 키 선택기 함수에 따라 지정된 <see cref="T:System.Collections.Generic.IComparer`1" />로 키를 비교하여 시퀀스의 요소를 병렬로 그룹화합니다.</summary>
      <returns>
        <paramref name="TKey" />에 따라 내림차순으로 정렬된 그룹 시퀀스입니다.</returns>
      <param name="source">정렬할 요소가 들어 있는 <see cref="T:System.Linq.OrderedParallelQuery`1" />입니다.</param>
      <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 지정된 함수를 사용하여 각 그룹의 요소를 프로젝션합니다.</summary>
      <returns>
        <paramref name="TKey" />에 따라 내림차순으로 정렬된 그룹 시퀀스입니다.</returns>
      <param name="source">정렬할 요소가 들어 있는 <see cref="T:System.Linq.OrderedParallelQuery`1" />입니다.</param>
      <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
      <param name="elementSelector">각 소스 요소를 <see cref="T:System.Linq.IGrouping`2" />의 요소에 매핑하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement">
        <see cref="T:System.Linq.IGrouping`2" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화합니다.키는 비교자를 통해 비교되고 각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</summary>
      <returns>
        <paramref name="TKey" />에 따라 내림차순으로 정렬된 그룹 시퀀스입니다.</returns>
      <param name="source">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</param>
      <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
      <param name="elementSelector">각 소스 요소를 IGrouping의 요소에 매핑하는 함수입니다.</param>
      <param name="comparer">키를 비교할 IComparer{TSource}입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement">IGrouping에 있는 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <summary>지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</summary>
      <returns>각 요소가 그룹과 해당 키에 대한 프로젝션을 나타내는 <paramref name="TResult" /> 형식의 요소 시퀀스입니다.</returns>
      <param name="source">요소를 그룹화할 시퀀스입니다.</param>
      <param name="keySelector">각 요소에 대해 키를 추출하는 함수입니다.</param>
      <param name="elementSelector">각 소스 요소를 IGrouping&lt;TKey, TElement&gt;의 요소에 매핑하는 함수입니다.</param>
      <param name="resultSelector">각 그룹의 결과 값을 만드는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement">각 IGrouping{TKey, TElement}에 있는 요소의 형식입니다.</typeparam>
      <typeparam name="TResult">
        <paramref name="resultSelector" />에서 반환하는 결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>지정된 키 누적기 함수에 따라 시퀀스의 요소를 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.키 값은 지정된 비교자를 통해 비교되고 각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</summary>
      <returns>각 요소가 그룹과 해당 키에 대한 프로젝션을 나타내는 <paramref name="TResult" /> 형식의 요소 시퀀스입니다.</returns>
      <param name="source">요소를 그룹화할 시퀀스입니다.</param>
      <param name="keySelector">각 요소에 대해 키를 추출하는 함수입니다.</param>
      <param name="elementSelector">각 소스 요소를 IGrouping{Key, TElement}의 요소에 매핑하는 함수입니다.</param>
      <param name="resultSelector">각 그룹의 결과 값을 만드는 함수입니다.</param>
      <param name="comparer">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement">각 IGrouping{TKey, TElement}에 있는 요소의 형식입니다.</typeparam>
      <typeparam name="TResult">
        <paramref name="resultSelector" />에서 반환하는 결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <summary>지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</summary>
      <returns>각 요소가 그룹과 해당 키에 대한 프로젝션을 나타내는 <paramref name="TResult" /> 형식의 요소 시퀀스입니다.</returns>
      <param name="source">요소를 그룹화할 시퀀스입니다.</param>
      <param name="keySelector">각 요소에 대해 키를 추출하는 함수입니다.</param>
      <param name="resultSelector">각 그룹의 결과 값을 만드는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TResult">
        <paramref name="resultSelector" />에서 반환하는 결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.키는 지정된 비교자를 통해 비교됩니다.</summary>
      <returns>그룹 시퀀스입니다.</returns>
      <param name="source">요소를 그룹화할 시퀀스입니다.</param>
      <param name="keySelector">각 요소에 대해 키를 추출하는 함수입니다.</param>
      <param name="resultSelector">각 그룹의 결과 값을 만드는 함수입니다.</param>
      <param name="comparer">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TResult">
        <paramref name="resultSelector" />에서 반환하는 결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary>이 GroupJoin 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="outer">이 매개 변수는 사용되지 않습니다.</param>
      <param name="inner">이 매개 변수는 사용되지 않습니다.</param>
      <param name="outerKeySelector">이 매개 변수는 사용되지 않습니다.</param>
      <param name="innerKeySelector">이 매개 변수는 사용되지 않습니다.</param>
      <param name="resultSelector">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TOuter">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TInner">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TKey">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TResult">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>이 GroupJoin 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="outer">이 매개 변수는 사용되지 않습니다.</param>
      <param name="inner">이 매개 변수는 사용되지 않습니다.</param>
      <param name="outerKeySelector">이 매개 변수는 사용되지 않습니다.</param>
      <param name="innerKeySelector">이 매개 변수는 사용되지 않습니다.</param>
      <param name="resultSelector">이 매개 변수는 사용되지 않습니다.</param>
      <param name="comparer">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TOuter">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TInner">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TKey">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TResult">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary>키가 같은지 여부에 따라 두 시퀀스의 요소를 병렬로 연관시키고 결과를 그룹화합니다.기본 같음 비교자를 사용하여 키를 비교합니다.</summary>
      <returns>두 시퀀스에 대해 그룹화 조인을 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="outer">조인할 첫 번째 시퀀스입니다.</param>
      <param name="inner">첫 번째 시퀀스에 조인할 시퀀스입니다.</param>
      <param name="outerKeySelector">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="innerKeySelector">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="resultSelector">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</param>
      <typeparam name="TOuter">두 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TInner">첫 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">키 선택기 함수에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TResult">결과 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>키가 같은지 여부에 따라 두 시퀀스의 요소를 병렬로 연관시키고 결과를 그룹화합니다.지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />를 사용하여 키를 비교합니다.</summary>
      <returns>두 시퀀스에 대해 그룹화 조인을 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="outer">조인할 첫 번째 시퀀스입니다.</param>
      <param name="inner">첫 번째 시퀀스에 조인할 시퀀스입니다.</param>
      <param name="outerKeySelector">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="innerKeySelector">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="resultSelector">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</param>
      <param name="comparer">키를 해시하여 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TOuter">두 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TInner">첫 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">키 선택기 함수에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TResult">결과 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>이 Intersect 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="first">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>이 Intersect 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="first">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second">이 매개 변수는 사용되지 않습니다.</param>
      <param name="comparer">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>기본 같음 비교자로 값을 비교하여 두 병렬 시퀀스의 교집합을 구합니다.</summary>
      <returns>두 시퀀스의 교집합을 이루는 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="first">
        <paramref name="second" />에도 있는 고유 요소가 반환되는 시퀀스입니다.</param>
      <param name="second">첫 번째 시퀀스에도 있는 고유 요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>지정된 IEqualityComparer{T}로 값을 비교하여 두 병렬 시퀀스의 교집합을 구합니다.</summary>
      <returns>두 시퀀스의 교집합을 이루는 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="first">
        <paramref name="second" />에도 있는 고유 요소가 반환되는 시퀀스입니다.</param>
      <param name="second">첫 번째 시퀀스에도 있는 고유 요소가 반환되는 시퀀스입니다.</param>
      <param name="comparer">값을 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary>이 Join 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="outer">이 매개 변수는 사용되지 않습니다.</param>
      <param name="inner">이 매개 변수는 사용되지 않습니다.</param>
      <param name="outerKeySelector">이 매개 변수는 사용되지 않습니다.</param>
      <param name="innerKeySelector">이 매개 변수는 사용되지 않습니다.</param>
      <param name="resultSelector">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TOuter">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TInner">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TKey">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TResult">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>이 Join 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="outer">이 매개 변수는 사용되지 않습니다.</param>
      <param name="inner">이 매개 변수는 사용되지 않습니다.</param>
      <param name="outerKeySelector">이 매개 변수는 사용되지 않습니다.</param>
      <param name="innerKeySelector">이 매개 변수는 사용되지 않습니다.</param>
      <param name="resultSelector">이 매개 변수는 사용되지 않습니다.</param>
      <param name="comparer">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TOuter">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TInner">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TKey">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TResult">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary>일치하는 키를 기준으로 두 시퀀스의 요소를 병렬로 연관시킵니다.기본 같음 비교자를 사용하여 키를 비교합니다.</summary>
      <returns>두 시퀀스에 대해 내부 조인을 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="outer">조인할 첫 번째 시퀀스입니다.</param>
      <param name="inner">첫 번째 시퀀스에 조인할 시퀀스입니다.</param>
      <param name="outerKeySelector">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="innerKeySelector">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="resultSelector">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</param>
      <typeparam name="TOuter">두 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TInner">첫 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">키 선택기 함수에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TResult">결과 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>일치하는 키를 기준으로 두 시퀀스의 요소를 병렬로 연관시킵니다.지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />를 사용하여 키를 비교합니다.</summary>
      <returns>두 시퀀스에 대해 내부 조인을 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="outer">조인할 첫 번째 시퀀스입니다.</param>
      <param name="inner">첫 번째 시퀀스에 조인할 시퀀스입니다.</param>
      <param name="outerKeySelector">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="innerKeySelector">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="resultSelector">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</param>
      <param name="comparer">키를 해시하여 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TOuter">두 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TInner">첫 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">키 선택기 함수에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TResult">결과 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
      <summary>병렬 시퀀스의 마지막 요소를 반환합니다.</summary>
      <returns>소스 시퀀스에서 마지막 위치에 있는 값입니다.</returns>
      <param name="source">마지막 요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>병렬 시퀀스에서 지정된 조건에 맞는 마지막 요소를 반환합니다.</summary>
      <returns>시퀀스에서 지정된 조건자 함수의 테스트를 통과하는 마지막 요소입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="predicate" />의 조건에 맞는 <paramref name="source" /> 요소가 없는 경우.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary>병렬 시퀀스의 마지막 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</summary>
      <returns>소스 시퀀스가 비어 있으면 default()이고, 그렇지 않으면 시퀀스의 마지막 요소입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>병렬 시퀀스에서 특정 조건에 맞는 마지막 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</summary>
      <returns>시퀀스가 비어 있거나 조건자 함수의 테스트를 통과하는 요소가 없으면 default()이고, 그렇지 않으면 조건자 함수의 테스트를 통과하는 마지막 요소입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
      <summary>병렬 시퀀스의 총 요소 수를 나타내는 Int64를 반환합니다.</summary>
      <returns>입력 시퀀스의 요소 수입니다.</returns>
      <param name="source">개수를 셀 요소가 들어 있는 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">소스의 요소 수가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우.- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.OverflowException">계산된 결과가 <see cref="F:System.Int64.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>병렬 시퀀스에서 특정 조건에 맞는 요소 수를 나타내는 Int64를 반환합니다.</summary>
      <returns>시퀀스에서 조건자 함수의 조건에 맞는 요소 수를 나타내는 숫자입니다.</returns>
      <param name="source">개수를 셀 요소가 들어 있는 시퀀스입니다.</param>
      <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">소스의 요소 수가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우.- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.OverflowException">계산된 결과가 <see cref="F:System.Int64.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
      <summary>값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
      <summary>값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
      <summary>값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
      <summary>값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary>값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary>값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary>값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary>값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary>값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
      <summary>값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
      <summary>값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <typeparam name="TSource">소스 시퀀스의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <returns>시퀀스의 최대값입니다.</returns>
      <param name="source">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TResult">
        <paramref name="selector" />에서 반환하는 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
      <summary>값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
      <summary>값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
      <summary>값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
      <summary>값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary>값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary>값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary>값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary>값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary>값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
      <summary>값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
      <summary>값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 없는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <returns>시퀀스의 최소값입니다.</returns>
      <param name="source">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TResult">
        <paramref name="selector" />에서 반환하는 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
      <summary>지정된 형식에 따라 ParallelQuery의 요소를 필터링합니다.</summary>
      <returns>형식의 입력 시퀀스에서 가져온 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="source">요소를 필터링할 시퀀스입니다.</param>
      <typeparam name="TResult">시퀀스의 요소를 필터링할 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>시퀀스의 요소를 키에 따라 오름차순으로 병렬 정렬합니다.</summary>
      <returns>키에 따라 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</returns>
      <param name="source">정렬할 값의 시퀀스입니다.</param>
      <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>지정된 비교자를 사용하여 시퀀스의 요소를 오름차순으로 병렬 정렬합니다.</summary>
      <returns>키에 따라 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</returns>
      <param name="source">정렬할 값의 시퀀스입니다.</param>
      <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer">키를 비교할 IComparer{TKey}입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>시퀀스의 요소를 키에 따라 내림차순으로 병렬 정렬합니다.</summary>
      <returns>키에 따라 내림차순으로 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</returns>
      <param name="source">정렬할 값의 시퀀스입니다.</param>
      <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>지정된 비교자를 사용하여 시퀀스의 요소를 내림차순으로 정렬합니다.</summary>
      <returns>키에 따라 내림차순으로 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</returns>
      <param name="source">정렬할 값의 시퀀스입니다.</param>
      <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer">키를 비교할 IComparer{TKey}입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="KeySelector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
      <summary>지정된 범위 내의 정수 병렬 시퀀스를 생성합니다.</summary>
      <returns>순차적 정수 범위가 들어 있는 IEnumerable&lt;Int32&gt;(C#의 경우) 또는 IEnumerable(Of Int32)(Visual Basic의 경우)입니다.</returns>
      <param name="start">시퀀스의 첫 번째 정수 값입니다.</param>
      <param name="count">생성할 순차적 정수의 개수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작거나 <paramref name="start" /> + <paramref name="count" /> - 1이 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
      <summary>반복되는 단일 값이 들어 있는 병렬 시퀀스를 생성합니다.</summary>
      <returns>반복되는 단일 값이 들어 있는 시퀀스를 생성합니다.</returns>
      <param name="element">반복할 값입니다.</param>
      <param name="count">생성된 시퀀스에서 값을 반복할 횟수입니다.</param>
      <typeparam name="TResult">결과 시퀀스에서 반복할 값의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" />가 0보다 작습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
      <summary>병렬 시퀀스의 요소 순서를 반전합니다.</summary>
      <returns>입력 시퀀스의 요소 순서를 뒤집은 시퀀스입니다.</returns>
      <param name="source">반전할 값의 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>시퀀스의 각 요소를 새 폼에 병렬로 프로젝션합니다.</summary>
      <returns>
        <paramref name="source" />의 각 요소에 대해 변환 함수를 호출한 결과로 얻어지는 요소가 있는 시퀀스입니다.</returns>
      <param name="source">변형 함수를 호출할 값 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TResult">선택기가 반환하는 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
      <summary>요소의 인덱스를 통합하여 시퀀스의 각 요소를 새 폼에 병렬로 프로젝션합니다.</summary>
      <returns>
        <paramref name="selector" />에 공급된 인덱스에 기초하여 <paramref name="source" />의 각 요소에 대해 변환 함수를 호출한 결과로 얻어지는 요소가 있는 시퀀스입니다.</returns>
      <param name="source">변형 함수를 호출할 값 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TResult">선택기가 반환하는 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.OverflowException">쿼리에 의해 <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 열거됩니다.이 조건은 스트리밍 시나리오에서 발생할 수 있습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary>시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />로 투영하고, 결과 시퀀스를 단일 시퀀스로 평면화한 다음 포함된 각 요소에 대해 결과 선택기 함수를 호출합니다.</summary>
      <returns>
        <paramref name="collectionSelector" />에 제공된 인덱스를 기준으로 <paramref name="source" />의 각 요소에 대해 일대다 변환 함수 <paramref name="collectionSelector" />를 호출한 다음 이러한 시퀀스 요소와 해당 소스 요소를 각각 결과 요소에 매핑한 결과로 얻어지는 요소가 있는 시퀀스입니다. </returns>
      <param name="source">계산할 값의 시퀀스입니다.</param>
      <param name="collectionSelector">각 소스 요소에 적용할 변형 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</param>
      <param name="resultSelector">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="collectionSelector" />에서 수집하는 중간 요소의 형식입니다.</typeparam>
      <typeparam name="TCollection">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TResult">결과 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.OverflowException">쿼리에 의해 <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 열거됩니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
      <summary>시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />에 평행으로 투영하고 결과 시퀀스를 단일 시퀀스로 평면화합니다.</summary>
      <returns>입력 시퀀스의 각 요소에 대해 일대다 변환 함수를 호출한 결과로 얻어지는 요소가 있는 시퀀스입니다.</returns>
      <param name="source">계산할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TResult">선택기가 반환하는 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary>시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />로 투영하고, 결과 시퀀스를 단일 시퀀스로 평면화한 다음 포함된 각 요소에 대해 결과 선택기 함수를 호출합니다.각 소스 요소의 인덱스는 해당 요소의 투영된 중간 폼에 사용됩니다.</summary>
      <returns>
        <paramref name="collectionSelector" />에 제공된 인덱스를 기준으로 <paramref name="source" />의 각 요소에 대해 일대다 변환 함수 <paramref name="collectionSelector" />를 호출한 다음 이러한 시퀀스 요소와 해당 소스 요소를 각각 결과 요소에 매핑한 결과로 얻어지는 요소가 있는 시퀀스입니다.</returns>
      <param name="source">계산할 값의 시퀀스입니다.</param>
      <param name="collectionSelector">각 소스 요소에 적용할 변형 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</param>
      <param name="resultSelector">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="collectionSelector" />에서 수집하는 중간 요소의 형식입니다.</typeparam>
      <typeparam name="TCollection">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TResult">반환할 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.OverflowException">쿼리에 의해 <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 열거됩니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
      <summary>시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />에 평행으로 투영하고 결과 시퀀스를 단일 시퀀스로 평면화합니다.각 소스 요소의 인덱스는 해당 요소의 투영된 폼에 사용됩니다.</summary>
      <returns>입력 시퀀스의 각 요소에 대해 일대다 변환 함수를 호출한 결과로 얻어지는 요소가 있는 시퀀스입니다.</returns>
      <param name="source">계산할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TResult">선택기가 반환하는 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.OverflowException">쿼리에 의해 <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 열거됩니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>이 SequenceEqual 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="first">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException">이 메서드를 호출할 때마다 throw됩니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>이 SequenceEqual 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="first">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second">이 매개 변수는 사용되지 않습니다.</param>
      <param name="comparer">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException">이 메서드를 호출할 때마다 throw됩니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>해당 형식에 대한 기본 같음 비교자를 통해 요소를 비교하여 두 병렬 시퀀스가 서로 같은지 확인합니다.</summary>
      <returns>두 소스 시퀀스의 길이가 같고 해당 형식의 기본 같음 비교자에 따라 상응하는 요소가 서로 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="first">두 번째와 비교할 시퀀스입니다.</param>
      <param name="second">첫 번째 입력 시퀀스와 비교할 시퀀스입니다.</param>
      <typeparam name="TSource">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>지정된 IEqualityComparer{T}를 통해 해당 요소를 비교하여 두 병렬 시퀀스가 서로 같은지 확인합니다.</summary>
      <returns>두 소스 시퀀스의 길이가 같고 해당 형식의 기본 같음 비교자에 따라 상응하는 요소가 서로 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="first">
        <paramref name="second" />와 비교할 시퀀스입니다.</param>
      <param name="second">첫 번째 입력 시퀀스와 비교할 시퀀스입니다.</param>
      <param name="comparer">요소를 비교하는 데 사용할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
      <summary>병렬 시퀀스의 유일한 요소를 반환하고, 시퀀스의 요소가 정확히 하나가 아니면 예외를 throw합니다.</summary>
      <returns>입력 시퀀스의 단일 요소입니다.</returns>
      <param name="source">단일 요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">입력 시퀀스에 요소가 두 개 이상 있습니다.-또는- 입력 시퀀스가 비어 있는 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>병렬 시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하고, 이러한 요소가 둘 이상 있으면 예외를 throw합니다.</summary>
      <returns>입력 시퀀스에서 특정 조건에 맞는 단일 요소입니다.</returns>
      <param name="source">단일 요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate">요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="predicate" />의 조건에 맞는 요소가 없는 경우-또는- <paramref name="predicate" />의 조건에 맞는 요소가 둘 이상인 경우</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary>병렬 시퀀스의 유일한 요소를 반환하거나 시퀀스가 비어 있으면 기본값을 반환합니다. 시퀀스에 요소가 둘 이상 있으면 예외를 throw합니다.</summary>
      <returns>입력 시퀀스의 단일 요소이거나, 시퀀스에 요소가 없으면 default()입니다.</returns>
      <param name="source">단일 요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>병렬 시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하거나 이러한 요소가 없으면 기본값을 반환합니다. 조건에 맞는 요소가 둘 이상 있으면 예외를 throw합니다.</summary>
      <returns>입력 시퀀스에서 조건에 맞는 단일 요소이거나, 이러한 요소가 없으면 default()입니다.</returns>
      <param name="source">단일 요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate">요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" />가 비어 있거나 여러 요소가 반환됩니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>병렬 시퀀스에서 지정된 수의 요소를 건너뛴 다음 나머지 요소를 반환합니다.</summary>
      <returns>입력 시퀀스에서 지정된 인덱스 뒤에 나오는 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <param name="count">나머지 요소를 반환하기 전에 건너뛸 요소 수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.OverflowException">개수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>지정된 조건이 true이면 병렬 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다.</summary>
      <returns>입력 시퀀스에서 조건자에 지정된 테스트를 통과하지 않는 급수의 첫 요소부터 시작되는 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary>지정된 조건이 true이면 병렬 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다.조건자 함수의 논리에 요소의 인덱스가 사용됩니다.</summary>
      <returns>입력 시퀀스에서 조건자에 지정된 테스트를 통과하지 않는 급수의 첫 요소부터 시작되는 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate">각 소스 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다. </param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.OverflowException">쿼리에 의해 <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 열거됩니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
      <summary>값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Decimal.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
      <summary>값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Double.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
      <summary>값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Int32.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
      <summary>값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Int64.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary>값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Decimal.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary>값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Double.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary>값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Int32.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary>값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Int64.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary>값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Single.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
      <summary>값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Single.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Decimal.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Double.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">소스 시퀀스의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Int32.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Int64.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Decimal.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Double.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Int32.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Int64.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Single.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary>입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <returns>시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
      <param name="source">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">합이 <see cref="F:System.Single.MaxValue" />보다 큰 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>병렬 시퀀스 시작 위치에서 지정된 수의 연속 요소를 반환합니다.</summary>
      <returns>입력 시퀀스의 시작 위치부터 지정된 수의 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <param name="count">반환할 요소 수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>지정된 조건이 true인 동안 병렬 시퀀스에서 요소를 반환합니다.</summary>
      <returns>입력 시퀀스에서 요소가 테스트를 더 이상 통과하지 않는 위치보다 앞에 나오는 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary>지정된 조건이 true인 동안 병렬 시퀀스에서 요소를 반환합니다.조건자 함수의 논리에 요소의 인덱스가 사용됩니다.</summary>
      <returns>입력 시퀀스에서 요소가 테스트를 더 이상 통과하지 않는 위치보다 앞에 나오는 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="source">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate">각 소스 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다. </param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.OverflowException">이 쿼리에 의해 <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 열거됩니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary>시퀀스의 요소를 키에 따라 오름차순으로 다시 병렬 정렬합니다.</summary>
      <returns>키에 따라 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</returns>
      <param name="source">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</param>
      <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>시퀀스의 요소를 지정된 비교자를 사용하여 오름차순으로 다시 병렬 정렬합니다.</summary>
      <returns>키에 따라 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</returns>
      <param name="source">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</param>
      <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer">키를 비교할 IComparer{TKey}입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary>시퀀스의 요소를 키에 따라 내림차순으로 다시 병렬 정렬합니다.</summary>
      <returns>요소가 키에 따라 내림차순으로 정렬된 시퀀스입니다.</returns>
      <param name="source">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</param>
      <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>시퀀스의 요소를 지정된 비교자를 사용하여 내림차순으로 다시 병렬 정렬합니다.</summary>
      <returns>요소가 키에 따라 내림차순으로 정렬된 시퀀스입니다.</returns>
      <param name="source">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</param>
      <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer">키를 비교할 IComparer{TKey}입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
      <summary>
        <see cref="T:System.Linq.ParallelQuery`1" />을 사용하여 배열을 만듭니다.</summary>
      <returns>입력 시퀀스의 요소가 들어 있는 배열입니다.</returns>
      <param name="source">배열을 만드는 데 사용할 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>지정된 키 선택기 함수에 따라 <see cref="T:System.Linq.ParallelQuery`1" />를 사용하여 <see cref="T:System.Collections.Generic.Dictionary`2" />를 만듭니다.</summary>
      <returns>키와 값이 들어 있는 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.Dictionary`2" />를 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector">각 요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">
        <paramref name="keySelector" />는 null을 참조하는(Visual Basic의 Nothing) 키를 생성합니다.-또는- <paramref name="keySelector" />가 두 요소에 대해 중복된 키를 생성하는 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>지정된 키 선택기 함수와 키 비교자에 따라 <see cref="T:System.Linq.ParallelQuery`1" />를 사용하여 <see cref="T:System.Collections.Generic.Dictionary`2" />를 만듭니다.</summary>
      <returns>키와 값이 들어 있는 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.Dictionary`2" />를 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector">각 요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">
        <paramref name="keySelector" />는 null을 참조하는(Visual Basic의 Nothing) 키를 생성합니다.-또는- <paramref name="keySelector" />가 두 요소에 대해 중복된 키를 생성하는 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>지정된 키 선택기와 요소 선택기 함수에 따라 <see cref="T:System.Linq.ParallelQuery`1" />를 사용하여 <see cref="T:System.Collections.Generic.Dictionary`2" />를 만듭니다.</summary>
      <returns>입력 시퀀스에서 선택한 <paramref name="TElement" /> 형식 값이 들어 있는 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.Dictionary`2" />를 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector">각 요소에서 키를 추출하는 함수입니다.</param>
      <param name="elementSelector">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다. </param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement">
        <paramref name="elementSelector" />에서 반환하는 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">
        <paramref name="keySelector" />는 null을 참조하는(Visual Basic의 Nothing) 키를 생성합니다.-또는- <paramref name="keySelector" />가 두 요소에 대해 중복된 키를 생성하는 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>지정된 키 선택기 함수, 비교자 및 요소 선택기 함수에 따라 <see cref="T:System.Linq.ParallelQuery`1" />를 사용하여 <see cref="T:System.Collections.Generic.Dictionary`2" />를 만듭니다.</summary>
      <returns>입력 시퀀스에서 선택한 <paramref name="TElement" /> 형식 값이 들어 있는 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.Dictionary`2" />를 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector">각 요소에서 키를 추출하는 함수입니다.</param>
      <param name="elementSelector">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</param>
      <param name="comparer">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement">
        <paramref name="elementSelector" />에서 반환하는 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">
        <paramref name="keySelector" />는 null을 참조하는(Visual Basic의 Nothing) 키를 생성합니다.-또는- <paramref name="keySelector" />가 두 요소에 대해 중복된 키를 생성하는 경우- 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
      <summary>
        <see cref="T:System.Linq.ParallelQuery`1" />을 사용하여 <see cref="T:System.Collections.Generic.List`1" />를 만듭니다.</summary>
      <returns>입력 시퀀스의 요소가 들어 있는 <see cref="T:System.Collections.Generic.List`1" />입니다.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.List`1" />를 만드는 데 사용할 시퀀스입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary>지정된 키 선택기 함수에 따라 <see cref="T:System.Linq.ParallelQuery`1" />를 사용하여 <see cref="T:System.Linq.ILookup`2" />을 만듭니다.</summary>
      <returns>키와 값이 들어 있는 <see cref="T:System.Linq.ILookup`2" />입니다.</returns>
      <param name="source">
        <see cref="T:System.Linq.ILookup`2" />을 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector">각 요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>지정된 키 선택기 함수와 키 비교자에 따라 <see cref="T:System.Linq.ParallelQuery`1" />를 사용하여 <see cref="T:System.Linq.ILookup`2" />을 만듭니다.</summary>
      <returns>키와 값이 들어 있는 <see cref="T:System.Linq.ILookup`2" />입니다.</returns>
      <param name="source">
        <see cref="T:System.Linq.ILookup`2" />을 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector">각 요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>지정된 키 선택기와 요소 선택기 함수에 따라 <see cref="T:System.Linq.ParallelQuery`1" />를 사용하여 <see cref="T:System.Linq.ILookup`2" />을 만듭니다.</summary>
      <returns>입력 시퀀스에서 선택한 <paramref name="TElement" /> 형식 값이 들어 있는 <see cref="T:System.Linq.ILookup`2" />입니다.</returns>
      <param name="source">
        <see cref="T:System.Linq.ILookup`2" />을 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector">각 요소에서 키를 추출하는 함수입니다.</param>
      <param name="elementSelector">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다. </param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement">
        <paramref name="elementSelector" />에서 반환하는 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>지정된 키 선택기 함수, 비교자 및 요소 선택기 함수에 따라 <see cref="T:System.Linq.ParallelQuery`1" />를 사용하여 <see cref="T:System.Linq.ILookup`2" />을 만듭니다.</summary>
      <returns>입력 시퀀스에서 선택한 TElement 형식의 값이 들어 있는 Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;)입니다.</returns>
      <param name="source">
        <see cref="T:System.Linq.ILookup`2" />을 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector">각 요소에서 키를 추출하는 함수입니다.</param>
      <param name="elementSelector">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다. </param>
      <param name="comparer">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement">
        <paramref name="elementSelector" />에서 반환하는 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>이 Union 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="first">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>이 Union 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="first">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second">이 매개 변수는 사용되지 않습니다.</param>
      <param name="comparer">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary>기본 같음 비교자를 사용하여 두 병렬 시퀀스의 합집합을 구합니다.</summary>
      <returns>두 입력 시퀀스의 모든 요소가 들어 있는 시퀀스이며, 중복 요소는 제외됩니다.</returns>
      <param name="first">해당 고유 요소가 합집합의 첫 번째 집합을 이루는 시퀀스입니다.</param>
      <param name="second">해당 고유 요소가 합집합의 두 번째 집합을 이루는 시퀀스입니다.</param>
      <typeparam name="TSource">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>지정된 IEqualityComparer{T}를 사용하여 두 병렬 시퀀스의 합집합을 구합니다.</summary>
      <returns>두 입력 시퀀스의 모든 요소가 들어 있는 시퀀스이며, 중복 요소는 제외됩니다.</returns>
      <param name="first">해당 고유 요소가 합집합의 첫 번째 집합을 이루는 시퀀스입니다.</param>
      <param name="second">해당 고유 요소가 합집합의 두 번째 집합을 이루는 시퀀스입니다.</param>
      <param name="comparer">값을 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary>조건자에 따라 값의 시퀀스를 병렬로 필터링합니다.</summary>
      <returns>입력 시퀀스에서 조건에 맞는 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="source">필터링할 시퀀스입니다.</param>
      <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">소스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary>조건자에 따라 값의 시퀀스를 병렬로 필터링합니다.조건자 함수의 논리에 각 요소의 인덱스가 사용됩니다.</summary>
      <returns>입력 시퀀스에서 조건에 맞는 요소가 들어 있는 시퀀스입니다.</returns>
      <param name="source">필터링할 시퀀스입니다.</param>
      <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource">소스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic에서는 Nothing)인 경우.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.OverflowException">쿼리에 의해 <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 열거됩니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
      <summary>쿼리와 연결할 <see cref="T:System.Threading.CancellationToken" />을 설정합니다.</summary>
      <returns>소스와 같은 쿼리를 나타내고 등록된 취소 토큰을 포함하는 ParallelQuery입니다.</returns>
      <param name="source">옵션을 설정할 ParallelQuery입니다.</param>
      <param name="cancellationToken">취소 토큰입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ObjectDisposedException">
        <paramref name="cancellationToken" />과 연결된 <see cref="T:System.Threading.CancellationTokenSource" />는 삭제되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="WithCancellation" />은 쿼리에서 여러 번 사용됩니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary>쿼리에서 사용할 병렬 처리 수준을 설정합니다.병렬 처리 수준은 쿼리를 처리하기 위해 동시에 실행되는 작업의 최대 수입니다.</summary>
      <returns>소스와 같은 쿼리를 나타내고 병렬 처리 수준 제한이 설정된 ParallelQuery입니다.</returns>
      <param name="source">병렬 처리 수준에 대한 제한을 설정할 ParallelQuery입니다.</param>
      <param name="degreeOfParallelism">쿼리에 사용할 병렬 처리 수준입니다.기본값은 Math.Min (<see cref="P:System.Environment.ProcessorCount" />, MAX_SUPPORTED_DOP) 여기서 MAX_SUPPORTED_DOP 는 512입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="degreeOfParallelism" />가 1보다 작거나 511보다 큽니다. </exception>
      <exception cref="T:System.InvalidOperationException">WithDegreeOfParallelism은 쿼리에서 여러 번 사용됩니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
      <summary>쿼리의 실행 모드를 설정합니다.</summary>
      <returns>소스와 같은 쿼리를 나타내고 등록된 실행 모드를 포함하는 ParallelQuery입니다.</returns>
      <param name="source">옵션을 설정할 ParallelQuery입니다.</param>
      <param name="executionMode">쿼리를 실행할 모드입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="executionMode" />은(는) 올바른 <see cref="T:System.Linq.ParallelExecutionMode" /> 값이 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException">WithExecutionMode는 쿼리에서 여러 번 사용됩니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
      <summary>쿼리가 출력을 버퍼링하는 방식을 지정하는 병합 옵션을 이 쿼리에 대해 설정합니다.</summary>
      <returns>소스와 같은 쿼리를 나타내고 등록된 병합 옵션을 포함하는 ParallelQuery입니다.</returns>
      <param name="source">옵션을 설정할 ParallelQuery입니다.</param>
      <param name="mergeOptions">이 쿼리에 대해 설정할 병합 옵션입니다.</param>
      <typeparam name="TSource">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mergeOptions" />은(는) 올바른 <see cref="T:System.Linq.ParallelMergeOptions" /> 값이 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="WithMergeOptions" />은 쿼리에서 여러 번 사용됩니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
      <summary>이 Zip 오버로드는 호출되면 안 됩니다.이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <returns>이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
      <param name="first">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second">이 매개 변수는 사용되지 않습니다.</param>
      <param name="resultSelector">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TFirst">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TSecond">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TResult">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
      <summary>지정된 조건자 함수를 사용하여 두 시퀀스를 병렬로 병합합니다.</summary>
      <returns>두 시퀀스에 대해 <paramref name="resultSelector" /> pairwise를 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.시퀀스 길이가 같지 않으면 짧은 시퀀스 길이에 맞춰 긴 시퀀스를 자릅니다.</returns>
      <param name="first">zip을 수행할 첫 번째 시퀀스입니다.</param>
      <param name="second">zip을 수행할 두 번째 시퀀스입니다.</param>
      <param name="resultSelector">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</param>
      <typeparam name="TFirst">첫 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TSecond">두 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TResult">반환 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="first" /> 또는 <paramref name="second" /> 또는 <paramref name="resultSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="WithCancellation" />을 통해 전달된 토큰을 사용하여 쿼리가 취소되었습니다.</exception>
      <exception cref="T:System.AggregateException">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="T:System.Linq.ParallelExecutionMode">
      <summary>쿼리 실행 모드는 쿼리를 병렬화할 때 시스템에서 성능 저하를 처리하는 방식을 지정하는 힌트입니다.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.Default">
      <summary>이것이 기본값입니다.PLINQ는 쿼리 구조를 검사하여 속도가 개선될 가능성이 있는 경우만 쿼리를 병렬화합니다.쿼리 구조를 검사한 결과 속도 개선의 가능성이 없는 경우 PLINQ는 쿼리를 일반 LINQ to Objects 쿼리로 실행합니다.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.ForceParallelism">
      <summary>오버헤드가 높은 알고리즘을 사용해야 하는 경우에도 전체 쿼리를 병렬화합니다.쿼리의 병렬 실행으로 속도가 개선될 가능성이 있는 경우에만 이 플래그를 사용합니다. 그러나 기본 모드에서 PLINQ를 사용하면 쿼리가 순차적으로 실행됩니다.</summary>
    </member>
    <member name="T:System.Linq.ParallelMergeOptions">
      <summary>쿼리에 사용할 출력 병합의 기본 형식을 지정합니다.다시 말해, PLINQ가 다양한 파티션의 결과를 단일 결과 시퀀스로 병합하는 방법을 나타냅니다.이것은 힌트일 뿐이며 모든 쿼리를 병렬화하는 경우 시스템에서 무시될 수 있습니다.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.AutoBuffered">
      <summary>시스템에서 선택한 크기의 출력 버퍼를 이용하는 병합을 사용합니다.이렇게 하면 결과가 쿼리 소비자에게 제공되기 전에 출력 버퍼에 누적됩니다.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.Default">
      <summary>기본 병합 형식인 AutoBuffered를 사용합니다.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.FullyBuffered">
      <summary>전체 출력 버퍼를 이용하는 병합을 사용합니다.시스템에서 결과를 쿼리 소비자에게 제공하기 전에 모든 결과를 누적합니다.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.NotBuffered">
      <summary>출력 버퍼를 이용하지 않는 병합을 사용합니다.결과 요소가 계산되는 즉시 쿼리 소비자에게 제공됩니다.</summary>
    </member>
    <member name="T:System.Linq.ParallelQuery">
      <summary>병렬 시퀀스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Linq.ParallelQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary>시퀀스를 반복하는 열거자를 반환합니다.</summary>
      <returns>시퀀스를 반복하는 열거자입니다.</returns>
    </member>
    <member name="T:System.Linq.ParallelQuery`1">
      <summary>병렬 시퀀스를 나타냅니다.</summary>
      <typeparam name="TSource">소스 시퀀스의 요소 형식입니다.</typeparam>
    </member>
    <member name="M:System.Linq.ParallelQuery`1.GetEnumerator">
      <summary>시퀀스를 반복하는 열거자를 반환합니다.</summary>
      <returns>시퀀스를 반복하는 열거자입니다.</returns>
    </member>
  </members>
</doc>